{"ast":null,"code":"import { mapState, mapGetters, mapActions } from 'vuex';\nimport circlesApi from '@/api/circles';\nexport default {\n  name: 'MyCircleView',\n  data() {\n    return {\n      page: 1,\n      pageSize: 10\n    };\n  },\n  computed: {\n    ...mapState('circles', ['circles', 'members', 'loading', 'allCircles']),\n    ...mapGetters('auth', ['isMentor', 'currentUser'])\n  },\n  async created() {\n    await this.fetchMyCircles();\n    await this.fetchAllCircles();\n  },\n  methods: {\n    ...mapActions('circles', ['fetchMyCircles', 'fetchAllCircles']),\n    async joinCircle(circleId) {\n      try {\n        await circlesApi.joinCircle(circleId);\n        this.$message.success('加入圈子成功');\n        await this.fetchMyCircles();\n      } catch (e) {\n        this.$message.error(e.message || '加入圈子失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","circlesApi","name","data","page","pageSize","computed","created","fetchMyCircles","fetchAllCircles","methods","joinCircle","circleId","$message","success","e","error","message"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\views\\circles\\MyCircle.vue"],"sourcesContent":["<template>\r\n    <div class=\"circle-container\">\r\n      <template v-if=\"circles && circles.length\">\r\n        <h3>我加入的圈子</h3>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\" v-for=\"c in circles\" :key=\"c.id\">\r\n            <el-card>\r\n              <div>{{ c.name }}</div>\r\n              <div>{{ c.description }}</div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </template>\r\n      <template v-else>\r\n        <el-empty description=\"你还没有加入任何圈子\" />\r\n        <div v-if=\"allCircles && allCircles.length\">\r\n          <h3>所有圈子</h3>\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"6\" v-for=\"c in allCircles\" :key=\"c.id\">\r\n              <el-card>\r\n                <div>{{ c.name }}</div>\r\n                <div>{{ c.description }}</div>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"joinCircle(c.id)\">加入圈子</el-button>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapGetters, mapActions } from 'vuex'\r\n  import circlesApi from '@/api/circles'\r\n  \r\n  export default {\r\n    name: 'MyCircleView',\r\n    data() {\r\n      return {\r\n        page: 1,\r\n        pageSize: 10\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState('circles', ['circles', 'members', 'loading', 'allCircles']),\r\n      ...mapGetters('auth', ['isMentor', 'currentUser'])\r\n    },\r\n    async created() {\r\n      await this.fetchMyCircles()\r\n      await this.fetchAllCircles()\r\n    },\r\n    methods: {\r\n      ...mapActions('circles', ['fetchMyCircles', 'fetchAllCircles']),\r\n      async joinCircle(circleId) {\r\n        try {\r\n          await circlesApi.joinCircle(circleId)\r\n          this.$message.success('加入圈子成功')\r\n          await this.fetchMyCircles()\r\n        } catch (e) {\r\n          this.$message.error(e.message || '加入圈子失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .circle-container {\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .post-area {\r\n    padding: 0 20px;\r\n  }\r\n  </style>"],"mappings":"AAgCE,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAS,QAAS,MAAK;AACtD,OAAOC,UAAS,MAAO,eAAc;AAErC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;IACvE,GAAGC,UAAU,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;EACnD,CAAC;EACD,MAAMQ,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,cAAc,CAAC;IAC1B,MAAM,IAAI,CAACC,eAAe,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP,GAAGV,UAAU,CAAC,SAAS,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;IAC/D,MAAMW,UAAUA,CAACC,QAAQ,EAAE;MACzB,IAAI;QACF,MAAMX,UAAU,CAACU,UAAU,CAACC,QAAQ;QACpC,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,QAAQ;QAC9B,MAAM,IAAI,CAACN,cAAc,CAAC;MAC5B,EAAE,OAAOO,CAAC,EAAE;QACV,IAAI,CAACF,QAAQ,CAACG,KAAK,CAACD,CAAC,CAACE,OAAM,IAAK,QAAQ;MAC3C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}