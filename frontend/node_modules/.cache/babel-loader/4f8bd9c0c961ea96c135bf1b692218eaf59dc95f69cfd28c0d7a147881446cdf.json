{"ast":null,"code":"import AuthService from '@/api/auth';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user\n} : {\n  status: {\n    loggedIn: false\n  },\n  user: null\n};\nconst state = initialState;\nconst actions = {\n  login({\n    commit\n  }, user) {\n    return AuthService.login(user).then(user => {\n      commit('loginSuccess', user);\n      return Promise.resolve(user);\n    }, error => {\n      commit('loginFailure');\n      return Promise.reject(error);\n    });\n  },\n  logout({\n    commit\n  }) {\n    AuthService.logout();\n    commit('logout');\n  },\n  register({\n    commit\n  }, user) {\n    return AuthService.register(user).then(response => {\n      commit('registerSuccess');\n      return Promise.resolve(response.data);\n    }, error => {\n      commit('registerFailure');\n      return Promise.reject(error);\n    });\n  }\n};\nconst mutations = {\n  loginSuccess(state, user) {\n    state.status.loggedIn = true;\n    state.user = user;\n  },\n  loginFailure(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n  },\n  logout(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n  },\n  registerSuccess(state) {\n    state.status.loggedIn = false;\n  },\n  registerFailure(state) {\n    state.status.loggedIn = false;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n};","map":{"version":3,"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","state","actions","login","commit","then","Promise","resolve","error","reject","logout","register","response","data","mutations","loginSuccess","loginFailure","registerSuccess","registerFailure","namespaced"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/store/modules/auth.js"],"sourcesContent":["import AuthService from '@/api/auth';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user\r\n  ? { status: { loggedIn: true }, user }\r\n  : { status: { loggedIn: false }, user: null };\r\n\r\nconst state = initialState;\r\n\r\nconst actions = {\r\n  login({ commit }, user) {\r\n    return AuthService.login(user).then(\r\n      user => {\r\n        commit('loginSuccess', user);\r\n        return Promise.resolve(user);\r\n      },\r\n      error => {\r\n        commit('loginFailure');\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  },\r\n  logout({ commit }) {\r\n    AuthService.logout();\r\n    commit('logout');\r\n  },\r\n  register({ commit }, user) {\r\n    return AuthService.register(user).then(\r\n      response => {\r\n        commit('registerSuccess');\r\n        return Promise.resolve(response.data);\r\n      },\r\n      error => {\r\n        commit('registerFailure');\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  loginSuccess(state, user) {\r\n    state.status.loggedIn = true;\r\n    state.user = user;\r\n  },\r\n  loginFailure(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n  },\r\n  logout(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n  },\r\n  registerSuccess(state) {\r\n    state.status.loggedIn = false;\r\n  },\r\n  registerFailure(state) {\r\n    state.status.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n};"],"mappings":"AAAA,OAAOA,WAAW,MAAM,YAAY;AAEpC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,MAAMC,YAAY,GAAGL,IAAI,GACrB;EAAEM,MAAM,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAAEP;AAAK,CAAC,GACpC;EAAEM,MAAM,EAAE;IAAEC,QAAQ,EAAE;EAAM,CAAC;EAAEP,IAAI,EAAE;AAAK,CAAC;AAE/C,MAAMQ,KAAK,GAAGH,YAAY;AAE1B,MAAMI,OAAO,GAAG;EACdC,KAAKA,CAAC;IAAEC;EAAO,CAAC,EAAEX,IAAI,EAAE;IACtB,OAAOD,WAAW,CAACW,KAAK,CAACV,IAAI,CAAC,CAACY,IAAI,CACjCZ,IAAI,IAAI;MACNW,MAAM,CAAC,cAAc,EAAEX,IAAI,CAAC;MAC5B,OAAOa,OAAO,CAACC,OAAO,CAACd,IAAI,CAAC;IAC9B,CAAC,EACDe,KAAK,IAAI;MACPJ,MAAM,CAAC,cAAc,CAAC;MACtB,OAAOE,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;IAC9B,CACF,CAAC;EACH,CAAC;EACDE,MAAMA,CAAC;IAAEN;EAAO,CAAC,EAAE;IACjBZ,WAAW,CAACkB,MAAM,CAAC,CAAC;IACpBN,MAAM,CAAC,QAAQ,CAAC;EAClB,CAAC;EACDO,QAAQA,CAAC;IAAEP;EAAO,CAAC,EAAEX,IAAI,EAAE;IACzB,OAAOD,WAAW,CAACmB,QAAQ,CAAClB,IAAI,CAAC,CAACY,IAAI,CACpCO,QAAQ,IAAI;MACVR,MAAM,CAAC,iBAAiB,CAAC;MACzB,OAAOE,OAAO,CAACC,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC;IACvC,CAAC,EACDL,KAAK,IAAI;MACPJ,MAAM,CAAC,iBAAiB,CAAC;MACzB,OAAOE,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;IAC9B,CACF,CAAC;EACH;AACF,CAAC;AAED,MAAMM,SAAS,GAAG;EAChBC,YAAYA,CAACd,KAAK,EAAER,IAAI,EAAE;IACxBQ,KAAK,CAACF,MAAM,CAACC,QAAQ,GAAG,IAAI;IAC5BC,KAAK,CAACR,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDuB,YAAYA,CAACf,KAAK,EAAE;IAClBA,KAAK,CAACF,MAAM,CAACC,QAAQ,GAAG,KAAK;IAC7BC,KAAK,CAACR,IAAI,GAAG,IAAI;EACnB,CAAC;EACDiB,MAAMA,CAACT,KAAK,EAAE;IACZA,KAAK,CAACF,MAAM,CAACC,QAAQ,GAAG,KAAK;IAC7BC,KAAK,CAACR,IAAI,GAAG,IAAI;EACnB,CAAC;EACDwB,eAAeA,CAAChB,KAAK,EAAE;IACrBA,KAAK,CAACF,MAAM,CAACC,QAAQ,GAAG,KAAK;EAC/B,CAAC;EACDkB,eAAeA,CAACjB,KAAK,EAAE;IACrBA,KAAK,CAACF,MAAM,CAACC,QAAQ,GAAG,KAAK;EAC/B;AACF,CAAC;AAED,eAAe;EACbmB,UAAU,EAAE,IAAI;EAChBlB,KAAK;EACLC,OAAO;EACPY;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}