{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"my-books-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"book-list\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"我的书库\", -1 /* HOISTED */)), _createVNode(_component_el_divider), $data.books.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_empty, {\n    description: \"暂无已添加的书籍\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.books, book => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: book.id,\n      class: \"book-card\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        src: '/' + book.cover_url,\n        class: \"cover\"\n      }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, _toDisplayString(book.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(book.author), 1 /* TEXT */), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"mini\",\n        onClick: $event => $options.remove(book.id)\n      }, {\n        default: _withCtx(() => [...(_cache[0] || (_cache[0] = [_createTextVNode(\"移除\")]))]),\n        _: 2 /* DYNAMIC */,\n        __: [0]\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_divider","$data","books","length","_hoisted_2","_component_el_empty","description","_hoisted_3","_Fragment","_renderList","book","_createBlock","_component_el_card","id","default","_withCtx","src","cover_url","_hoisted_4","_hoisted_5","_toDisplayString","title","author","_component_el_button","type","size","onClick","$event","$options","remove","_cache","_createTextVNode","_","__"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\views\\books\\MyBooks.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-books-container\">\r\n    <h2>我的书库</h2>\r\n    <el-divider />\r\n    <div v-if=\"books.length === 0\">\r\n      <el-empty description=\"暂无已添加的书籍\" />\r\n    </div>\r\n    <div v-else class=\"book-list\">\r\n      <el-card v-for=\"book in books\" :key=\"book.id\" class=\"book-card\">\r\n        <img :src=\"'/' + book.cover_url\" class=\"cover\" />\r\n        <div class=\"info\">\r\n          <h3>{{ book.title }}</h3>\r\n          <p>{{ book.author }}</p>\r\n          <el-button type=\"danger\" size=\"mini\" @click=\"remove(book.id)\">移除</el-button>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userBooksApi from '@/api/userBooks'\r\nimport BookAPI from '@/api/books'\r\n\r\nexport default {\r\n  name: 'MyBooks',\r\n  data() {\r\n    return {\r\n      books: []\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchMyBooks()\r\n  },\r\n  methods: {\r\n    async fetchMyBooks() {\r\n      const userBooks = await userBooksApi.getBooks()\r\n      const allBooks = await BookAPI.getAll()\r\n      this.books = allBooks.items.filter(b => userBooks.some(ub => ub.book_id === b.id))\r\n    },\r\n    async remove(bookId) {\r\n      await userBooksApi.removeBook(bookId)\r\n      this.$message.success('已移除')\r\n      await this.fetchMyBooks()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.my-books-container {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n.book-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n.book-card {\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.cover {\r\n  width: 100px;\r\n  height: 140px;\r\n  object-fit: cover;\r\n  margin-bottom: 10px;\r\n}\r\n.info {\r\n  text-align: center;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EADjCC,GAAA;AAAA;;EAAAA,GAAA;EAOgBD,KAAK,EAAC;;mBAPtB;;EAUaA,KAAK,EAAC;AAAM;;;;;;uBATvBE,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJC,mBAAA,CAAa,YAAT,MAAI,sBACRC,YAAA,CAAcC,qBAAA,GACHC,KAAA,CAAAC,KAAK,CAACC,MAAM,U,cAAvBP,mBAAA,CAEM,OANVQ,UAAA,GAKML,YAAA,CAAmCM,mBAAA;IAAzBC,WAAW,EAAC;EAAU,G,oBAElCV,mBAAA,CASM,OATNW,UASM,I,kBARJX,mBAAA,CAOUY,SAAA,QAfhBC,WAAA,CAQ8BR,KAAA,CAAAC,KAAK,EAAbQ,IAAI;yBAApBC,YAAA,CAOUC,kBAAA;MAPsBjB,GAAG,EAAEe,IAAI,CAACG,EAAE;MAAEnB,KAAK,EAAC;;MAR1DoB,OAAA,EAAAC,QAAA,CASQ,MAAiD,CAAjDjB,mBAAA,CAAiD;QAA3CkB,GAAG,QAAQN,IAAI,CAACO,SAAS;QAAEvB,KAAK,EAAC;8BAT/CwB,UAAA,GAUQpB,mBAAA,CAIM,OAJNqB,UAIM,GAHJrB,mBAAA,CAAyB,YAAAsB,gBAAA,CAAlBV,IAAI,CAACW,KAAK,kBACjBvB,mBAAA,CAAwB,WAAAsB,gBAAA,CAAlBV,IAAI,CAACY,MAAM,kBACjBvB,YAAA,CAA4EwB,oBAAA;QAAjEC,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,MAAM;QAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,MAAM,CAACnB,IAAI,CAACG,EAAE;;QAbrEC,OAAA,EAAAC,QAAA,CAawE,MAAE,KAAAe,MAAA,QAAAA,MAAA,OAb1EC,gBAAA,CAawE,IAAE,E;QAb1EC,CAAA;QAAAC,EAAA;;MAAAD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}