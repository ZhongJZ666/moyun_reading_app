{"ast":null,"code":"import axios from 'axios';\nimport { getAuthHeader } from './utils';\nconst API_URL = process.env.VUE_APP_API_BASE_URL + '/books';\nclass BookAPI {\n  // 获取所有书籍\n  static async getAll(params = {}) {\n    try {\n      const response = await axios.get(API_URL, {\n        params,\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 获取书籍详情\n  static async getDetail(bookId) {\n    try {\n      const response = await axios.get(`${API_URL}/${bookId}`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 推荐新书（导师权限）\n  static async recommendBook(bookData) {\n    try {\n      const response = await axios.post(API_URL, bookData, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 错误处理\n  static _handleError(error) {\n    if (error.response) {\n      // 服务器返回错误响应\n      const message = error.response.data?.message || '服务器错误';\n      throw new Error(message);\n    } else if (error.request) {\n      // 请求发送失败\n      throw new Error('网络连接失败');\n    } else {\n      // 其他错误\n      throw new Error(error.message || '未知错误');\n    }\n  }\n}\nexport default BookAPI;","map":{"version":3,"names":["axios","getAuthHeader","API_URL","process","env","VUE_APP_API_BASE_URL","BookAPI","getAll","params","response","get","headers","data","error","_handleError","getDetail","bookId","recommendBook","bookData","post","message","Error","request"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/api/books.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthHeader } from './utils';\r\n\r\nconst API_URL = process.env.VUE_APP_API_BASE_URL + '/books';\r\n\r\nclass BookAPI {\r\n  // 获取所有书籍\r\n  static async getAll(params = {}) {\r\n    try {\r\n      const response = await axios.get(API_URL, {\r\n        params,\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 获取书籍详情\r\n  static async getDetail(bookId) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${bookId}`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 推荐新书（导师权限）\r\n  static async recommendBook(bookData) {\r\n    try {\r\n      const response = await axios.post(API_URL, bookData, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 错误处理\r\n  static _handleError(error) {\r\n    if (error.response) {\r\n      // 服务器返回错误响应\r\n      const message = error.response.data?.message || '服务器错误';\r\n      throw new Error(message);\r\n    } else if (error.request) {\r\n      // 请求发送失败\r\n      throw new Error('网络连接失败');\r\n    } else {\r\n      // 其他错误\r\n      throw new Error(error.message || '未知错误');\r\n    }\r\n  }\r\n}\r\n\r\nexport default BookAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,SAAS;AAEvC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAG,QAAQ;AAE3D,MAAMC,OAAO,CAAC;EACZ;EACA,aAAaC,MAAMA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,OAAO,EAAE;QACxCM,MAAM;QACNG,OAAO,EAAEV,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOQ,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaE,SAASA,CAACC,MAAM,EAAE;IAC7B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,OAAO,IAAIc,MAAM,EAAE,EAAE;QACvDL,OAAO,EAAEV,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOQ,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaI,aAAaA,CAACC,QAAQ,EAAE;IACnC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMT,KAAK,CAACmB,IAAI,CAACjB,OAAO,EAAEgB,QAAQ,EAAE;QACnDP,OAAO,EAAEV,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOQ,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,OAAOC,YAAYA,CAACD,KAAK,EAAE;IACzB,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB;MACA,MAAMW,OAAO,GAAGP,KAAK,CAACJ,QAAQ,CAACG,IAAI,EAAEQ,OAAO,IAAI,OAAO;MACvD,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;IAC1B,CAAC,MAAM,IAAIP,KAAK,CAACS,OAAO,EAAE;MACxB;MACA,MAAM,IAAID,KAAK,CAAC,QAAQ,CAAC;IAC3B,CAAC,MAAM;MACL;MACA,MAAM,IAAIA,KAAK,CAACR,KAAK,CAACO,OAAO,IAAI,MAAM,CAAC;IAC1C;EACF;AACF;AAEA,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}