{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapGetters } from 'vuex';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { Bell, ChatDotRound } from '@element-plus/icons-vue';\nexport default {\n  name: 'Navbar',\n  components: {\n    Bell,\n    ChatDotRound\n  },\n  data() {\n    return {\n      defaultAvatar,\n      unreadNotifications: 0,\n      unreadMessages: 0\n    };\n  },\n  computed: {\n    ...mapState('auth', ['user']),\n    ...mapGetters('auth', ['isAuthenticated'])\n  },\n  created() {\n    if (this.isAuthenticated) {\n      this.fetchUnreadCounts();\n    }\n  },\n  methods: {\n    goToProfile() {\n      this.$router.push('/profile');\n    },\n    async logout() {\n      await this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    },\n    async fetchUnreadCounts() {\n      try {\n        const [notifications, messages] = await Promise.all([this.$http.get('/api/notifications/unread/count'), this.$http.get('/api/messages/unread/count')]);\n        this.unreadNotifications = notifications.data.count;\n        this.unreadMessages = messages.data.count;\n      } catch (error) {\n        console.error('获取未读数量失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","defaultAvatar","Bell","ChatDotRound","name","components","data","unreadNotifications","unreadMessages","computed","created","isAuthenticated","fetchUnreadCounts","methods","goToProfile","$router","push","logout","$store","dispatch","notifications","messages","Promise","all","$http","get","count","error","console"],"sources":["E:\\moyun-reading-platform\\moyun-reading-platform\\frontend\\src\\components\\Navbar.vue"],"sourcesContent":["<template>\r\n    <nav class=\"navbar\">\r\n      <router-link to=\"/\" class=\"logo\">\r\n        <img src=\"@/assets/logo.png\" alt=\"墨韵读书会\" title=\"墨韵读书会\">\r\n      </router-link>\r\n  \r\n      <div class=\"nav-links\">\r\n        <router-link v-if=\"isAuthenticated\" to=\"/books\">书库</router-link>\r\n        <router-link v-if=\"isAuthenticated\" to=\"/my-circle\">我的圈子</router-link>\r\n      </div>\r\n  \r\n      <div class=\"user-menu\">\r\n        <template v-if=\"isAuthenticated\">\r\n          <!-- 通知图标 -->\r\n          <el-badge\r\n            :value=\"unreadNotifications\"\r\n            :hidden=\"!unreadNotifications\"\r\n            class=\"notification-badge\"\r\n          >\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"$router.push('/notifications')\"\r\n              title=\"查看通知\"\r\n            >\r\n              <el-icon><Bell /></el-icon>\r\n            </el-button>\r\n          </el-badge>\r\n\r\n          <!-- 消息图标 -->\r\n          <el-badge\r\n            :value=\"unreadMessages\"\r\n            :hidden=\"!unreadMessages\"\r\n            class=\"message-badge\"\r\n          >\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"$router.push('/messages')\"\r\n              title=\"查看消息\"\r\n            >\r\n              <el-icon><ChatDotRound /></el-icon>\r\n            </el-button>\r\n          </el-badge>\r\n\r\n          <el-dropdown>\r\n            <span class=\"user-avatar\">\r\n              <el-avatar :size=\"36\" :src=\"user.avatar || defaultAvatar\" />\r\n              {{ user.username }}\r\n            </span>\r\n            <template #dropdown>\r\n              <el-dropdown-menu>\r\n                <el-dropdown-item @click=\"goToProfile\">个人中心</el-dropdown-item>\r\n                <el-dropdown-item divided @click=\"logout\">退出登录</el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </template>\r\n          </el-dropdown>\r\n        </template>\r\n        <template v-else>\r\n          <router-link to=\"/login\" class=\"login-btn\">登录</router-link>\r\n        </template>\r\n      </div>\r\n    </nav>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapGetters } from 'vuex';\r\n  import defaultAvatar from '@/assets/default-avatar.png';\r\n  import { Bell, ChatDotRound } from '@element-plus/icons-vue';\r\n  \r\n  export default {\r\n    name: 'Navbar',\r\n    components: {\r\n      Bell,\r\n      ChatDotRound\r\n    },\r\n    data() {\r\n      return { \r\n        defaultAvatar,\r\n        unreadNotifications: 0,\r\n        unreadMessages: 0\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState('auth', ['user']),\r\n      ...mapGetters('auth', ['isAuthenticated'])\r\n    },\r\n    created() {\r\n      if (this.isAuthenticated) {\r\n        this.fetchUnreadCounts();\r\n      }\r\n    },\r\n    methods: {\r\n      goToProfile() {\r\n        this.$router.push('/profile');\r\n      },\r\n      async logout() {\r\n        await this.$store.dispatch('auth/logout');\r\n        this.$router.push('/login');\r\n      },\r\n      async fetchUnreadCounts() {\r\n        try {\r\n          const [notifications, messages] = await Promise.all([\r\n            this.$http.get('/api/notifications/unread/count'),\r\n            this.$http.get('/api/messages/unread/count')\r\n          ]);\r\n          this.unreadNotifications = notifications.data.count;\r\n          this.unreadMessages = messages.data.count;\r\n        } catch (error) {\r\n          console.error('获取未读数量失败:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .navbar {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    background: #fff;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .logo img {\r\n    height: 40px;\r\n  }\r\n  \r\n  .nav-links {\r\n    flex: 1;\r\n    margin-left: 30px;\r\n  }\r\n  \r\n  .nav-links a {\r\n    margin-right: 20px;\r\n    color: #333;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .user-avatar {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .login-btn {\r\n    padding: 5px 15px;\r\n    border: 1px solid #409EFF;\r\n    border-radius: 4px;\r\n    color: #409EFF;\r\n  }\r\n  \r\n  .notification-badge,\r\n  .message-badge {\r\n    margin-right: 15px;\r\n  }\r\n  \r\n  .el-button {\r\n    padding: 8px;\r\n  }\r\n  \r\n  .el-icon {\r\n    font-size: 20px;\r\n  }\r\n  </style>"],"mappings":";AAgEE,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAC3C,OAAOC,aAAY,MAAO,6BAA6B;AACvD,SAASC,IAAI,EAAEC,YAAW,QAAS,yBAAyB;AAE5D,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVH,IAAI;IACJC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLL,aAAa;MACbM,mBAAmB,EAAE,CAAC;MACtBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,QAAQ,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;IAC7B,GAAGC,UAAU,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC;EAC3C,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACC,eAAe,EAAE;MACxB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC1B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC;MACzC,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACD,MAAMJ,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAM,CAACQ,aAAa,EAAEC,QAAQ,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClD,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,iCAAiC,CAAC,EACjD,IAAI,CAACD,KAAK,CAACC,GAAG,CAAC,4BAA4B,EAC5C,CAAC;QACF,IAAI,CAAClB,mBAAkB,GAAIa,aAAa,CAACd,IAAI,CAACoB,KAAK;QACnD,IAAI,CAAClB,cAAa,GAAIa,QAAQ,CAACf,IAAI,CAACoB,KAAK;MAC3C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}