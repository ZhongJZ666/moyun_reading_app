{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '@/store';\nimport { clearAuthData } from '@/api/utils';\nVue.use(VueRouter);\n\n// 路由懒加载\nconst loadView = view => () => import(`@/views/${view}.vue`);\n\n// 路由配置\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: loadView('home/Home'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: loadView('auth/Login'),\n  meta: {\n    guestOnly: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: loadView('auth/Register'),\n  meta: {\n    guestOnly: true\n  }\n},\n// 书籍相关路由\n{\n  path: '/books',\n  name: 'BookList',\n  component: loadView('books/BookList'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/books/:id',\n  name: 'BookDetail',\n  component: loadView('books/BookDetail'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/recommend',\n  name: 'RecommendBook',\n  component: loadView('books/Recommend'),\n  meta: {\n    requiresAuth: true,\n    roles: ['mentor', 'admin']\n  }\n},\n// 圈子相关路由\n{\n  path: '/my-circle',\n  name: 'MyCircle',\n  component: loadView('circles/MyCircle'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// 帖子相关路由\n{\n  path: '/posts/create',\n  name: 'CreatePost',\n  component: loadView('posts/CreatePost'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/posts/:id',\n  name: 'PostDetail',\n  component: loadView('posts/PostDetail'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// 通知相关路由\n{\n  path: '/notifications',\n  name: 'Notifications',\n  component: loadView('notifications/NotificationList'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// 消息相关路由\n{\n  path: '/messages',\n  name: 'Messages',\n  component: loadView('messages/MessageList'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/messages/:id',\n  name: 'MessageChat',\n  component: loadView('messages/MessageChat'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// 个人资料\n{\n  path: '/profile',\n  name: 'MyProfile',\n  component: loadView('profile/MyProfile'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// 管理员路由\n{\n  path: '/admin',\n  name: 'AdminDashboard',\n  component: loadView('admin/AdminDashboard'),\n  meta: {\n    requiresAuth: true,\n    roles: ['admin']\n  }\n},\n// 404处理\n{\n  path: '*',\n  name: 'NotFound',\n  component: loadView('errors/NotFound')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    return savedPosition || {\n      x: 0,\n      y: 0\n    };\n  }\n});\n\n// 全局前置守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 检查认证状态\n  const isAuthenticated = store.getters['auth/isAuthenticated'];\n  const currentUser = store.state.auth.user;\n\n  // 需要登录但未登录\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next({\n      name: 'Login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n    return;\n  }\n\n  // 仅游客访问但已登录\n  if (to.matched.some(record => record.meta.guestOnly) && isAuthenticated) {\n    next({\n      name: 'Home'\n    });\n    return;\n  }\n\n  // 角色权限检查\n  if (to.matched.some(record => record.meta.roles)) {\n    const hasRole = to.meta.roles.includes(currentUser?.role);\n    if (!hasRole) {\n      next({\n        name: 'Home'\n      });\n      return;\n    }\n  }\n\n  // 如果跳转登录页且携带token，尝试自动登录\n  if (to.name === 'Login' && localStorage.getItem('token') && !isAuthenticated) {\n    try {\n      await store.dispatch('auth/checkAuth');\n      next(from.path === '/' ? {\n        name: 'Home'\n      } : from);\n    } catch {\n      clearAuthData();\n      next();\n    }\n    return;\n  }\n  next();\n});\n\n// 全局后置钩子\nrouter.afterEach(to => {\n  // 页面标题\n  document.title = to.meta.title ? `${to.meta.title} | 墨韵读书会` : '墨韵读书会';\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","clearAuthData","use","loadView","view","routes","path","name","component","meta","requiresAuth","guestOnly","roles","router","mode","base","process","env","BASE_URL","scrollBehavior","to","from","savedPosition","x","y","beforeEach","next","isAuthenticated","getters","currentUser","state","auth","user","matched","some","record","query","redirect","fullPath","hasRole","includes","role","localStorage","getItem","dispatch","afterEach","document","title"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from '@/store'\r\nimport { clearAuthData } from '@/api/utils'\r\n\r\nVue.use(VueRouter)\r\n\r\n// 路由懒加载\r\nconst loadView = (view) => () => import(`@/views/${view}.vue`)\r\n\r\n// 路由配置\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: loadView('home/Home'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: loadView('auth/Login'),\r\n    meta: { guestOnly: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: loadView('auth/Register'),\r\n    meta: { guestOnly: true }\r\n  },\r\n  // 书籍相关路由\r\n  {\r\n    path: '/books',\r\n    name: 'BookList',\r\n    component: loadView('books/BookList'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/books/:id',\r\n    name: 'BookDetail',\r\n    component: loadView('books/BookDetail'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/recommend',\r\n    name: 'RecommendBook',\r\n    component: loadView('books/Recommend'),\r\n    meta: { requiresAuth: true, roles: ['mentor', 'admin'] }\r\n  },\r\n  // 圈子相关路由\r\n  {\r\n    path: '/my-circle',\r\n    name: 'MyCircle',\r\n    component: loadView('circles/MyCircle'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  // 帖子相关路由\r\n  {\r\n    path: '/posts/create',\r\n    name: 'CreatePost',\r\n    component: loadView('posts/CreatePost'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/posts/:id',\r\n    name: 'PostDetail',\r\n    component: loadView('posts/PostDetail'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  // 通知相关路由\r\n  {\r\n    path: '/notifications',\r\n    name: 'Notifications',\r\n    component: loadView('notifications/NotificationList'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  // 消息相关路由\r\n  {\r\n    path: '/messages',\r\n    name: 'Messages',\r\n    component: loadView('messages/MessageList'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/messages/:id',\r\n    name: 'MessageChat',\r\n    component: loadView('messages/MessageChat'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  // 个人资料\r\n  {\r\n    path: '/profile',\r\n    name: 'MyProfile',\r\n    component: loadView('profile/MyProfile'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  // 管理员路由\r\n  {\r\n    path: '/admin',\r\n    name: 'AdminDashboard',\r\n    component: loadView('admin/AdminDashboard'),\r\n    meta: { requiresAuth: true, roles: ['admin'] }\r\n  },\r\n  // 404处理\r\n  {\r\n    path: '*',\r\n    name: 'NotFound',\r\n    component: loadView('errors/NotFound')\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes,\r\n  scrollBehavior(to, from, savedPosition) {\r\n    return savedPosition || { x: 0, y: 0 }\r\n  }\r\n})\r\n\r\n// 全局前置守卫\r\nrouter.beforeEach(async (to, from, next) => {\r\n  // 检查认证状态\r\n  const isAuthenticated = store.getters['auth/isAuthenticated']\r\n  const currentUser = store.state.auth.user\r\n\r\n  // 需要登录但未登录\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    next({ name: 'Login', query: { redirect: to.fullPath } })\r\n    return\r\n  }\r\n\r\n  // 仅游客访问但已登录\r\n  if (to.matched.some(record => record.meta.guestOnly) && isAuthenticated) {\r\n    next({ name: 'Home' })\r\n    return\r\n  }\r\n\r\n  // 角色权限检查\r\n  if (to.matched.some(record => record.meta.roles)) {\r\n    const hasRole = to.meta.roles.includes(currentUser?.role)\r\n    if (!hasRole) {\r\n      next({ name: 'Home' })\r\n      return\r\n    }\r\n  }\r\n\r\n  // 如果跳转登录页且携带token，尝试自动登录\r\n  if (to.name === 'Login' && localStorage.getItem('token') && !isAuthenticated) {\r\n    try {\r\n      await store.dispatch('auth/checkAuth')\r\n      next(from.path === '/' ? { name: 'Home' } : from)\r\n    } catch {\r\n      clearAuthData()\r\n      next()\r\n    }\r\n    return\r\n  }\r\n\r\n  next()\r\n})\r\n\r\n// 全局后置钩子\r\nrouter.afterEach((to) => {\r\n  // 页面标题\r\n  document.title = to.meta.title \r\n    ? `${to.meta.title} | 墨韵读书会` \r\n    : '墨韵读书会'\r\n})\r\n\r\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}