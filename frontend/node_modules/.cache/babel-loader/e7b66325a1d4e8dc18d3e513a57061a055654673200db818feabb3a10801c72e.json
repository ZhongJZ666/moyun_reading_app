{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport CircleSidebar from '@/components/CircleSidebar.vue';\nimport CreatePostForm from '@/components/CreatePostForm.vue';\nimport PostList from '@/components/PostList.vue';\nimport AddMemberForm from '@/components/AddMemberForm.vue';\nimport circlesApi from '@/api/circles';\nexport default {\n  name: 'MyCircleView',\n  components: {\n    CircleSidebar,\n    CreatePostForm,\n    PostList,\n    AddMemberForm\n  },\n  data() {\n    return {\n      showAddMemberDialog: false,\n      page: 1,\n      pageSize: 10\n    };\n  },\n  computed: {\n    ...mapState('circles', ['circles', 'members', 'loading', 'allCircles']),\n    ...mapState('posts', ['posts']),\n    ...mapGetters('auth', ['isMentor', 'currentUser']),\n    isMember() {\n      return this.members.some(m => m.id === this.currentUser.id);\n    }\n  },\n  async created() {\n    await this.fetchMyCircles();\n    await this.fetchAllCircles();\n  },\n  methods: {\n    ...mapActions('circles', ['fetchMyCircles', 'fetchAllCircles']),\n    ...mapActions('posts', ['fetchCirclePosts']),\n    async fetchCircleData() {\n      await this.fetchMyCircles();\n      if (this.circles?.length) {\n        await this.fetchCirclePosts({\n          circleId: this.circles[0].id,\n          page: this.page,\n          pageSize: this.pageSize\n        });\n      }\n    },\n    handlePostCreated(newPost) {\n      this.posts.unshift(newPost);\n    },\n    handleMemberAdded() {\n      this.showAddMemberDialog = false;\n      this.fetchCircleData();\n    },\n    async loadMorePosts() {\n      this.page++;\n      await this.fetchCirclePosts({\n        circleId: this.circles[0].id,\n        page: this.page,\n        pageSize: this.pageSize\n      });\n    },\n    async joinCircle(circleId) {\n      try {\n        await circlesApi.joinCircle(circleId);\n        this.$message.success('加入圈子成功');\n        await this.fetchMyCircles();\n      } catch (e) {\n        this.$message.error(e.message || '加入圈子失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","CircleSidebar","CreatePostForm","PostList","AddMemberForm","circlesApi","name","components","data","showAddMemberDialog","page","pageSize","computed","isMember","members","some","m","id","currentUser","created","fetchMyCircles","fetchAllCircles","methods","fetchCircleData","circles","length","fetchCirclePosts","circleId","handlePostCreated","newPost","posts","unshift","handleMemberAdded","loadMorePosts","joinCircle","$message","success","e","error","message"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\views\\circles\\MyCircle.vue"],"sourcesContent":["<template>\r\n    <div class=\"circle-container\">\r\n      <template v-if=\"circles && circles.length\">\r\n        <h3>我加入的圈子</h3>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\" v-for=\"c in circles\" :key=\"c.id\">\r\n            <el-card>\r\n              <div>{{ c.name }}</div>\r\n              <div>{{ c.description }}</div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </template>\r\n      <template v-else>\r\n        <el-empty description=\"你还没有加入任何圈子\" />\r\n        <div v-if=\"allCircles && allCircles.length\">\r\n          <h3>所有圈子</h3>\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"6\" v-for=\"c in allCircles\" :key=\"c.id\">\r\n              <el-card>\r\n                <div>{{ c.name }}</div>\r\n                <div>{{ c.description }}</div>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"joinCircle(c.id)\">加入圈子</el-button>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapGetters, mapActions } from 'vuex'\r\n  import CircleSidebar from '@/components/CircleSidebar.vue'\r\n  import CreatePostForm from '@/components/CreatePostForm.vue'\r\n  import PostList from '@/components/PostList.vue'\r\n  import AddMemberForm from '@/components/AddMemberForm.vue'\r\n  import circlesApi from '@/api/circles'\r\n  \r\n  export default {\r\n    name: 'MyCircleView',\r\n    components: {\r\n      CircleSidebar,\r\n      CreatePostForm,\r\n      PostList,\r\n      AddMemberForm\r\n    },\r\n    data() {\r\n      return {\r\n        showAddMemberDialog: false,\r\n        page: 1,\r\n        pageSize: 10\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState('circles', ['circles', 'members', 'loading', 'allCircles']),\r\n      ...mapState('posts', ['posts']),\r\n      ...mapGetters('auth', ['isMentor', 'currentUser']),\r\n      isMember() {\r\n        return this.members.some(m => m.id === this.currentUser.id)\r\n      }\r\n    },\r\n    async created() {\r\n      await this.fetchMyCircles()\r\n      await this.fetchAllCircles()\r\n    },\r\n    methods: {\r\n      ...mapActions('circles', ['fetchMyCircles', 'fetchAllCircles']),\r\n      ...mapActions('posts', ['fetchCirclePosts']),\r\n      async fetchCircleData() {\r\n        await this.fetchMyCircles()\r\n        if (this.circles?.length) {\r\n          await this.fetchCirclePosts({\r\n            circleId: this.circles[0].id,\r\n            page: this.page,\r\n            pageSize: this.pageSize\r\n          })\r\n        }\r\n      },\r\n      handlePostCreated(newPost) {\r\n        this.posts.unshift(newPost)\r\n      },\r\n      handleMemberAdded() {\r\n        this.showAddMemberDialog = false\r\n        this.fetchCircleData()\r\n      },\r\n      async loadMorePosts() {\r\n        this.page++\r\n        await this.fetchCirclePosts({\r\n          circleId: this.circles[0].id,\r\n          page: this.page,\r\n          pageSize: this.pageSize\r\n        })\r\n      },\r\n      async joinCircle(circleId) {\r\n        try {\r\n          await circlesApi.joinCircle(circleId)\r\n          this.$message.success('加入圈子成功')\r\n          await this.fetchMyCircles()\r\n        } catch (e) {\r\n          this.$message.error(e.message || '加入圈子失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .circle-container {\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .post-area {\r\n    padding: 0 20px;\r\n  }\r\n  </style>"],"mappings":";;AAgCE,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAS,QAAS,MAAK;AACtD,OAAOC,aAAY,MAAO,gCAA+B;AACzD,OAAOC,cAAa,MAAO,iCAAgC;AAC3D,OAAOC,QAAO,MAAO,2BAA0B;AAC/C,OAAOC,aAAY,MAAO,gCAA+B;AACzD,OAAOC,UAAS,MAAO,eAAc;AAErC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVN,aAAa;IACbC,cAAc;IACdC,QAAQ;IACRC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,mBAAmB,EAAE,KAAK;MAC1BC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGd,QAAQ,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;IACvE,GAAGA,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;IAC/B,GAAGC,UAAU,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAClDc,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAM,IAAI,CAACC,WAAW,CAACD,EAAE;IAC5D;EACF,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,cAAc,CAAC;IAC1B,MAAM,IAAI,CAACC,eAAe,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP,GAAGtB,UAAU,CAAC,SAAS,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;IAC/D,GAAGA,UAAU,CAAC,OAAO,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAC5C,MAAMuB,eAAeA,CAAA,EAAG;MACtB,MAAM,IAAI,CAACH,cAAc,CAAC;MAC1B,IAAI,IAAI,CAACI,OAAO,EAAEC,MAAM,EAAE;QACxB,MAAM,IAAI,CAACC,gBAAgB,CAAC;UAC1BC,QAAQ,EAAE,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACP,EAAE;UAC5BP,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;MACH;IACF,CAAC;IACDiB,iBAAiBA,CAACC,OAAO,EAAE;MACzB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO;IAC5B,CAAC;IACDG,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACvB,mBAAkB,GAAI,KAAI;MAC/B,IAAI,CAACc,eAAe,CAAC;IACvB,CAAC;IACD,MAAMU,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACvB,IAAI,EAAC;MACV,MAAM,IAAI,CAACgB,gBAAgB,CAAC;QAC1BC,QAAQ,EAAE,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACP,EAAE;QAC5BP,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;IACH,CAAC;IACD,MAAMuB,UAAUA,CAACP,QAAQ,EAAE;MACzB,IAAI;QACF,MAAMtB,UAAU,CAAC6B,UAAU,CAACP,QAAQ;QACpC,IAAI,CAACQ,QAAQ,CAACC,OAAO,CAAC,QAAQ;QAC9B,MAAM,IAAI,CAAChB,cAAc,CAAC;MAC5B,EAAE,OAAOiB,CAAC,EAAE;QACV,IAAI,CAACF,QAAQ,CAACG,KAAK,CAACD,CAAC,CAACE,OAAM,IAAK,QAAQ;MAC3C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}