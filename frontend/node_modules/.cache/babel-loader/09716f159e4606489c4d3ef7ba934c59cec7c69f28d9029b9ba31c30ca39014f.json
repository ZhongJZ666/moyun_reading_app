{"ast":null,"code":"import AuthService from '@/api/auth';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user\n} : {\n  status: {\n    loggedIn: false\n  },\n  user: null\n};\nconst state = initialState;\nconst getters = {\n  isAuthenticated: state => state.status.loggedIn,\n  currentUser: state => state.user,\n  userRole: state => state.user?.role\n};\nconst actions = {\n  login({\n    commit\n  }, user) {\n    return AuthService.login(user).then(user => {\n      commit('loginSuccess', user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return Promise.resolve(user);\n    }, error => {\n      commit('loginFailure');\n      return Promise.reject(error);\n    });\n  },\n  logout({\n    commit\n  }) {\n    AuthService.logout();\n    commit('logout');\n    localStorage.removeItem('user');\n  },\n  register({\n    commit\n  }, user) {\n    return AuthService.register(user).then(response => {\n      commit('registerSuccess');\n      return Promise.resolve(response.data);\n    }, error => {\n      commit('registerFailure');\n      return Promise.reject(error);\n    });\n  },\n  checkAuth({\n    commit\n  }) {\n    return AuthService.getCurrentUser().then(user => {\n      commit('loginSuccess', user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return Promise.resolve(user);\n    }, error => {\n      commit('loginFailure');\n      return Promise.reject(error);\n    });\n  }\n};\nconst mutations = {\n  loginSuccess(state, user) {\n    state.status.loggedIn = true;\n    state.user = user;\n  },\n  loginFailure(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n  },\n  logout(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n  },\n  registerSuccess(state) {\n    state.status.loggedIn = false;\n  },\n  registerFailure(state) {\n    state.status.loggedIn = false;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","state","getters","isAuthenticated","currentUser","userRole","role","actions","login","commit","then","setItem","stringify","Promise","resolve","error","reject","logout","removeItem","register","response","data","checkAuth","getCurrentUser","mutations","loginSuccess","loginFailure","registerSuccess","registerFailure","namespaced"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/store/modules/auth.js"],"sourcesContent":["import AuthService from '@/api/auth';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user\r\n  ? { status: { loggedIn: true }, user }\r\n  : { status: { loggedIn: false }, user: null };\r\n\r\nconst state = initialState;\r\n\r\nconst getters = {\r\n  isAuthenticated: state => state.status.loggedIn,\r\n  currentUser: state => state.user,\r\n  userRole: state => state.user?.role\r\n};\r\n\r\nconst actions = {\r\n  login({ commit }, user) {\r\n    return AuthService.login(user).then(\r\n      user => {\r\n        commit('loginSuccess', user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return Promise.resolve(user);\r\n      },\r\n      error => {\r\n        commit('loginFailure');\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  },\r\n  logout({ commit }) {\r\n    AuthService.logout();\r\n    commit('logout');\r\n    localStorage.removeItem('user');\r\n  },\r\n  register({ commit }, user) {\r\n    return AuthService.register(user).then(\r\n      response => {\r\n        commit('registerSuccess');\r\n        return Promise.resolve(response.data);\r\n      },\r\n      error => {\r\n        commit('registerFailure');\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  },\r\n  checkAuth({ commit }) {\r\n    return AuthService.getCurrentUser().then(\r\n      user => {\r\n        commit('loginSuccess', user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return Promise.resolve(user);\r\n      },\r\n      error => {\r\n        commit('loginFailure');\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  loginSuccess(state, user) {\r\n    state.status.loggedIn = true;\r\n    state.user = user;\r\n  },\r\n  loginFailure(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n  },\r\n  logout(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n  },\r\n  registerSuccess(state) {\r\n    state.status.loggedIn = false;\r\n  },\r\n  registerFailure(state) {\r\n    state.status.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}