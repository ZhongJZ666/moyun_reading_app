{"ast":null,"code":"import { getAdminDashboard } from '@/api/dashboard';\nimport { exportUsers, exportStats, exportActivities } from '@/api/export';\nimport { Refresh, Download } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'AdminDashboard',\n  components: {\n    Refresh,\n    Download\n  },\n  data() {\n    return {\n      stats: {\n        totalUsers: 0,\n        mentors: 0,\n        students: 0\n      },\n      systemStatus: {\n        server: true,\n        database: true,\n        cpuUsage: 0,\n        memoryUsage: 0,\n        diskUsage: 0\n      },\n      lastUpdate: '',\n      activities: [],\n      loading: {\n        stats: false,\n        system: false,\n        activities: false\n      },\n      userChart: null,\n      userTrendChart: null,\n      systemTrendChart: null,\n      activityChart: null,\n      filterForm: {\n        dateRange: [],\n        dataType: 'all'\n      },\n      dateShortcuts: [{\n        text: '最近一周',\n        value: () => {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n          return [start, end];\n        }\n      }, {\n        text: '最近一个月',\n        value: () => {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n          return [start, end];\n        }\n      }, {\n        text: '最近三个月',\n        value: () => {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n          return [start, end];\n        }\n      }]\n    };\n  },\n  async created() {\n    await this.fetchDashboardData();\n  },\n  mounted() {\n    this.initCharts();\n  },\n  beforeUnmount() {\n    this.disposeCharts();\n  },\n  methods: {\n    async fetchDashboardData() {\n      try {\n        const {\n          data\n        } = await getAdminDashboard();\n        this.stats = data.stats;\n        this.systemStatus = data.systemStatus;\n        this.lastUpdate = data.lastUpdate;\n        this.activities = data.activities;\n        this.updateCharts();\n      } catch (error) {\n        this.$message.error('获取数据失败：' + error.message);\n      }\n    },\n    initCharts() {\n      this.userChart = echarts.init(this.$refs.userChart);\n      this.userTrendChart = echarts.init(this.$refs.userTrendChart);\n      this.systemTrendChart = echarts.init(this.$refs.systemTrendChart);\n      this.activityChart = echarts.init(this.$refs.activityChart);\n      this.updateCharts();\n    },\n    disposeCharts() {\n      [this.userChart, this.userTrendChart, this.systemTrendChart, this.activityChart].forEach(chart => {\n        if (chart) {\n          chart.dispose();\n        }\n      });\n    },\n    updateCharts() {\n      this.updateUserChart();\n      this.updateUserTrendChart();\n      this.updateSystemTrendChart();\n      this.updateActivityChart();\n    },\n    updateUserChart() {\n      if (!this.userChart) return;\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '用户分布',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: this.stats.mentors,\n            name: '导师'\n          }, {\n            value: this.stats.students,\n            name: '学生'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      this.userChart.setOption(option);\n    },\n    updateUserTrendChart() {\n      if (!this.userTrendChart) return;\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['总用户', '导师', '学生']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '总用户',\n          type: 'line',\n          data: [120, 132, 101, 134, 90, 230]\n        }, {\n          name: '导师',\n          type: 'line',\n          data: [20, 22, 21, 24, 20, 30]\n        }, {\n          name: '学生',\n          type: 'line',\n          data: [100, 110, 80, 110, 70, 200]\n        }]\n      };\n      this.userTrendChart.setOption(option);\n    },\n    updateSystemTrendChart() {\n      if (!this.systemTrendChart) return;\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['CPU', '内存', '磁盘']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00']\n        },\n        yAxis: {\n          type: 'value',\n          max: 100\n        },\n        series: [{\n          name: 'CPU',\n          type: 'line',\n          data: [30, 40, 35, 50, 49, 60]\n        }, {\n          name: '内存',\n          type: 'line',\n          data: [50, 55, 52, 58, 60, 65]\n        }, {\n          name: '磁盘',\n          type: 'line',\n          data: [70, 72, 71, 73, 75, 78]\n        }]\n      };\n      this.systemTrendChart.setOption(option);\n    },\n    updateActivityChart() {\n      if (!this.activityChart) return;\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['活动数量']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '活动数量',\n          type: 'bar',\n          data: [5, 7, 3, 8, 6, 10, 4]\n        }]\n      };\n      this.activityChart.setOption(option);\n    },\n    getCpuStatus(usage) {\n      if (usage >= 90) return 'exception';\n      if (usage >= 70) return 'warning';\n      return 'success';\n    },\n    getMemoryStatus(usage) {\n      if (usage >= 90) return 'exception';\n      if (usage >= 70) return 'warning';\n      return 'success';\n    },\n    getDiskStatus(usage) {\n      if (usage >= 90) return 'exception';\n      if (usage >= 70) return 'warning';\n      return 'success';\n    },\n    async refreshStats() {\n      this.loading.stats = true;\n      try {\n        const {\n          data\n        } = await getAdminDashboard();\n        this.stats = data.stats;\n        this.updateCharts();\n      } catch (error) {\n        this.$message.error('刷新统计数据失败：' + error.message);\n      } finally {\n        this.loading.stats = false;\n      }\n    },\n    async refreshSystemStatus() {\n      this.loading.system = true;\n      try {\n        const {\n          data\n        } = await getAdminDashboard();\n        this.systemStatus = data.systemStatus;\n        this.lastUpdate = data.lastUpdate;\n        this.updateCharts();\n      } catch (error) {\n        this.$message.error('刷新系统状态失败：' + error.message);\n      } finally {\n        this.loading.system = false;\n      }\n    },\n    async refreshActivities() {\n      this.loading.activities = true;\n      try {\n        const {\n          data\n        } = await getAdminDashboard();\n        this.activities = data.activities;\n        this.updateCharts();\n      } catch (error) {\n        this.$message.error('刷新活动列表失败：' + error.message);\n      } finally {\n        this.loading.activities = false;\n      }\n    },\n    async handleExport(command) {\n      try {\n        let response;\n        switch (command) {\n          case 'exportUsers':\n            response = await exportUsers();\n            break;\n          case 'exportStats':\n            response = await exportStats();\n            break;\n          default:\n            return;\n        }\n        const blob = new Blob([response.data]);\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `${command}_${new Date().toISOString().split('T')[0]}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        this.$message.success('导出成功');\n      } catch (error) {\n        this.$message.error('导出失败：' + error.message);\n      }\n    },\n    async exportActivities() {\n      try {\n        const response = await exportActivities();\n        const blob = new Blob([response.data]);\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `activities_${new Date().toISOString().split('T')[0]}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        this.$message.success('导出成功');\n      } catch (error) {\n        this.$message.error('导出失败：' + error.message);\n      }\n    },\n    handleFilterChange() {\n      this.fetchDashboardData();\n    },\n    resetFilter() {\n      this.filterForm = {\n        dateRange: [],\n        dataType: 'all'\n      };\n      this.fetchDashboardData();\n    }\n  }\n};","map":{"version":3,"names":["getAdminDashboard","exportUsers","exportStats","exportActivities","Refresh","Download","echarts","name","components","data","stats","totalUsers","mentors","students","systemStatus","server","database","cpuUsage","memoryUsage","diskUsage","lastUpdate","activities","loading","system","userChart","userTrendChart","systemTrendChart","activityChart","filterForm","dateRange","dataType","dateShortcuts","text","value","end","Date","start","setTime","getTime","created","fetchDashboardData","mounted","initCharts","beforeUnmount","disposeCharts","methods","updateCharts","error","$message","message","init","$refs","forEach","chart","dispose","updateUserChart","updateUserTrendChart","updateSystemTrendChart","updateActivityChart","option","tooltip","trigger","legend","orient","left","series","type","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","xAxis","yAxis","max","axisPointer","getCpuStatus","usage","getMemoryStatus","getDiskStatus","refreshStats","refreshSystemStatus","refreshActivities","handleExport","command","response","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL","success","handleFilterChange","resetFilter"],"sources":["E:\\moyun-reading-platform\\moyun-reading-platform\\frontend\\src\\views\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-dashboard\">\r\n    <h1>管理员工作台</h1>\r\n    \r\n    <!-- 数据筛选器 -->\r\n    <el-card class=\"filter-card\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <el-form-item label=\"时间范围\">\r\n          <el-date-picker\r\n            v-model=\"filterForm.dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            :shortcuts=\"dateShortcuts\"\r\n            @change=\"handleFilterChange\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"数据类型\">\r\n          <el-select v-model=\"filterForm.dataType\" @change=\"handleFilterChange\">\r\n            <el-option label=\"全部\" value=\"all\" />\r\n            <el-option label=\"用户数据\" value=\"users\" />\r\n            <el-option label=\"活动数据\" value=\"activities\" />\r\n            <el-option label=\"系统数据\" value=\"system\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleFilterChange\">应用筛选</el-button>\r\n          <el-button @click=\"resetFilter\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <el-row :gutter=\"20\" class=\"dashboard-content\">\r\n      <el-col :span=\"8\">\r\n        <el-card v-loading=\"loading.stats\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>用户统计</span>\r\n              <div class=\"header-actions\">\r\n                <el-button type=\"text\" @click=\"refreshStats\">\r\n                  <el-icon><Refresh /></el-icon>\r\n                </el-button>\r\n                <el-dropdown @command=\"handleExport\">\r\n                  <el-button type=\"text\">\r\n                    <el-icon><Download /></el-icon>\r\n                  </el-button>\r\n                  <template #dropdown>\r\n                    <el-dropdown-menu>\r\n                      <el-dropdown-item command=\"exportUsers\">导出用户数据</el-dropdown-item>\r\n                      <el-dropdown-item command=\"exportStats\">导出统计数据</el-dropdown-item>\r\n                    </el-dropdown-menu>\r\n                  </template>\r\n                </el-dropdown>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <div class=\"user-stats\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <div class=\"stat-value\">{{ stats.totalUsers }}</div>\r\n                  <div class=\"stat-label\">总用户</div>\r\n                </div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <div class=\"stat-value\">{{ stats.mentors }}</div>\r\n                  <div class=\"stat-label\">导师</div>\r\n                </div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <div class=\"stat-value\">{{ stats.students }}</div>\r\n                  <div class=\"stat-label\">学生</div>\r\n                </div>\r\n              </el-col>\r\n            </el-row>\r\n            <el-divider />\r\n            <div class=\"chart-container\">\r\n              <div ref=\"userChart\" style=\"width: 100%; height: 200px;\"></div>\r\n            </div>\r\n            <el-divider />\r\n            <div class=\"chart-container\">\r\n              <div ref=\"userTrendChart\" style=\"width: 100%; height: 200px;\"></div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card v-loading=\"loading.system\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>系统状态</span>\r\n              <el-button type=\"text\" @click=\"refreshSystemStatus\">\r\n                <el-icon><Refresh /></el-icon>\r\n              </el-button>\r\n            </div>\r\n          </template>\r\n          <div class=\"system-status\">\r\n            <el-descriptions :column=\"1\" border>\r\n              <el-descriptions-item label=\"服务器状态\">\r\n                <el-tag :type=\"systemStatus.server ? 'success' : 'danger'\">\r\n                  {{ systemStatus.server ? '正常' : '异常' }}\r\n                </el-tag>\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"数据库状态\">\r\n                <el-tag :type=\"systemStatus.database ? 'success' : 'danger'\">\r\n                  {{ systemStatus.database ? '正常' : '异常' }}\r\n                </el-tag>\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"最后更新\">\r\n                {{ lastUpdate }}\r\n              </el-descriptions-item>\r\n            </el-descriptions>\r\n            <el-divider />\r\n            <div class=\"system-metrics\">\r\n              <el-progress \r\n                :percentage=\"systemStatus.cpuUsage\" \r\n                :format=\"format => `CPU: ${format}%`\"\r\n                :status=\"getCpuStatus(systemStatus.cpuUsage)\"\r\n              />\r\n              <el-progress \r\n                :percentage=\"systemStatus.memoryUsage\" \r\n                :format=\"format => `内存: ${format}%`\"\r\n                :status=\"getMemoryStatus(systemStatus.memoryUsage)\"\r\n              />\r\n              <el-progress \r\n                :percentage=\"systemStatus.diskUsage\" \r\n                :format=\"format => `磁盘: ${format}%`\"\r\n                :status=\"getDiskStatus(systemStatus.diskUsage)\"\r\n              />\r\n            </div>\r\n            <el-divider />\r\n            <div class=\"chart-container\">\r\n              <div ref=\"systemTrendChart\" style=\"width: 100%; height: 200px;\"></div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card v-loading=\"loading.activities\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>最近活动</span>\r\n              <div class=\"header-actions\">\r\n                <el-button type=\"text\" @click=\"refreshActivities\">\r\n                  <el-icon><Refresh /></el-icon>\r\n                </el-button>\r\n                <el-button type=\"text\" @click=\"exportActivities\">\r\n                  <el-icon><Download /></el-icon>\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <div class=\"activity-list\">\r\n            <el-empty v-if=\"!activities.length\" description=\"暂无活动\" />\r\n            <el-timeline v-else>\r\n              <el-timeline-item\r\n                v-for=\"activity in activities\"\r\n                :key=\"activity.id\"\r\n                :timestamp=\"activity.time\"\r\n                :type=\"activity.type\"\r\n              >\r\n                {{ activity.content }}\r\n              </el-timeline-item>\r\n            </el-timeline>\r\n          </div>\r\n          <el-divider />\r\n          <div class=\"chart-container\">\r\n            <div ref=\"activityChart\" style=\"width: 100%; height: 200px;\"></div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAdminDashboard } from '@/api/dashboard'\r\nimport { exportUsers, exportStats, exportActivities } from '@/api/export'\r\nimport { Refresh, Download } from '@element-plus/icons-vue'\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  components: {\r\n    Refresh,\r\n    Download\r\n  },\r\n  data() {\r\n    return {\r\n      stats: {\r\n        totalUsers: 0,\r\n        mentors: 0,\r\n        students: 0\r\n      },\r\n      systemStatus: {\r\n        server: true,\r\n        database: true,\r\n        cpuUsage: 0,\r\n        memoryUsage: 0,\r\n        diskUsage: 0\r\n      },\r\n      lastUpdate: '',\r\n      activities: [],\r\n      loading: {\r\n        stats: false,\r\n        system: false,\r\n        activities: false\r\n      },\r\n      userChart: null,\r\n      userTrendChart: null,\r\n      systemTrendChart: null,\r\n      activityChart: null,\r\n      filterForm: {\r\n        dateRange: [],\r\n        dataType: 'all'\r\n      },\r\n      dateShortcuts: [\r\n        {\r\n          text: '最近一周',\r\n          value: () => {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n            return [start, end]\r\n          }\r\n        },\r\n        {\r\n          text: '最近一个月',\r\n          value: () => {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n            return [start, end]\r\n          }\r\n        },\r\n        {\r\n          text: '最近三个月',\r\n          value: () => {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n            return [start, end]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchDashboardData()\r\n  },\r\n  mounted() {\r\n    this.initCharts()\r\n  },\r\n  beforeUnmount() {\r\n    this.disposeCharts()\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      try {\r\n        const { data } = await getAdminDashboard()\r\n        this.stats = data.stats\r\n        this.systemStatus = data.systemStatus\r\n        this.lastUpdate = data.lastUpdate\r\n        this.activities = data.activities\r\n        this.updateCharts()\r\n      } catch (error) {\r\n        this.$message.error('获取数据失败：' + error.message)\r\n      }\r\n    },\r\n    initCharts() {\r\n      this.userChart = echarts.init(this.$refs.userChart)\r\n      this.userTrendChart = echarts.init(this.$refs.userTrendChart)\r\n      this.systemTrendChart = echarts.init(this.$refs.systemTrendChart)\r\n      this.activityChart = echarts.init(this.$refs.activityChart)\r\n      this.updateCharts()\r\n    },\r\n    disposeCharts() {\r\n      [this.userChart, this.userTrendChart, this.systemTrendChart, this.activityChart].forEach(chart => {\r\n        if (chart) {\r\n          chart.dispose()\r\n        }\r\n      })\r\n    },\r\n    updateCharts() {\r\n      this.updateUserChart()\r\n      this.updateUserTrendChart()\r\n      this.updateSystemTrendChart()\r\n      this.updateActivityChart()\r\n    },\r\n    updateUserChart() {\r\n      if (!this.userChart) return\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            name: '用户分布',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: this.stats.mentors, name: '导师' },\r\n              { value: this.stats.students, name: '学生' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.userChart.setOption(option)\r\n    },\r\n    updateUserTrendChart() {\r\n      if (!this.userTrendChart) return\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['总用户', '导师', '学生']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '总用户',\r\n            type: 'line',\r\n            data: [120, 132, 101, 134, 90, 230]\r\n          },\r\n          {\r\n            name: '导师',\r\n            type: 'line',\r\n            data: [20, 22, 21, 24, 20, 30]\r\n          },\r\n          {\r\n            name: '学生',\r\n            type: 'line',\r\n            data: [100, 110, 80, 110, 70, 200]\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.userTrendChart.setOption(option)\r\n    },\r\n    updateSystemTrendChart() {\r\n      if (!this.systemTrendChart) return\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['CPU', '内存', '磁盘']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          max: 100\r\n        },\r\n        series: [\r\n          {\r\n            name: 'CPU',\r\n            type: 'line',\r\n            data: [30, 40, 35, 50, 49, 60]\r\n          },\r\n          {\r\n            name: '内存',\r\n            type: 'line',\r\n            data: [50, 55, 52, 58, 60, 65]\r\n          },\r\n          {\r\n            name: '磁盘',\r\n            type: 'line',\r\n            data: [70, 72, 71, 73, 75, 78]\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.systemTrendChart.setOption(option)\r\n    },\r\n    updateActivityChart() {\r\n      if (!this.activityChart) return\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['活动数量']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '活动数量',\r\n            type: 'bar',\r\n            data: [5, 7, 3, 8, 6, 10, 4]\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.activityChart.setOption(option)\r\n    },\r\n    getCpuStatus(usage) {\r\n      if (usage >= 90) return 'exception'\r\n      if (usage >= 70) return 'warning'\r\n      return 'success'\r\n    },\r\n    getMemoryStatus(usage) {\r\n      if (usage >= 90) return 'exception'\r\n      if (usage >= 70) return 'warning'\r\n      return 'success'\r\n    },\r\n    getDiskStatus(usage) {\r\n      if (usage >= 90) return 'exception'\r\n      if (usage >= 70) return 'warning'\r\n      return 'success'\r\n    },\r\n    async refreshStats() {\r\n      this.loading.stats = true\r\n      try {\r\n        const { data } = await getAdminDashboard()\r\n        this.stats = data.stats\r\n        this.updateCharts()\r\n      } catch (error) {\r\n        this.$message.error('刷新统计数据失败：' + error.message)\r\n      } finally {\r\n        this.loading.stats = false\r\n      }\r\n    },\r\n    async refreshSystemStatus() {\r\n      this.loading.system = true\r\n      try {\r\n        const { data } = await getAdminDashboard()\r\n        this.systemStatus = data.systemStatus\r\n        this.lastUpdate = data.lastUpdate\r\n        this.updateCharts()\r\n      } catch (error) {\r\n        this.$message.error('刷新系统状态失败：' + error.message)\r\n      } finally {\r\n        this.loading.system = false\r\n      }\r\n    },\r\n    async refreshActivities() {\r\n      this.loading.activities = true\r\n      try {\r\n        const { data } = await getAdminDashboard()\r\n        this.activities = data.activities\r\n        this.updateCharts()\r\n      } catch (error) {\r\n        this.$message.error('刷新活动列表失败：' + error.message)\r\n      } finally {\r\n        this.loading.activities = false\r\n      }\r\n    },\r\n    async handleExport(command) {\r\n      try {\r\n        let response\r\n        switch (command) {\r\n          case 'exportUsers':\r\n            response = await exportUsers()\r\n            break\r\n          case 'exportStats':\r\n            response = await exportStats()\r\n            break\r\n          default:\r\n            return\r\n        }\r\n        \r\n        const blob = new Blob([response.data])\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = `${command}_${new Date().toISOString().split('T')[0]}.xlsx`\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        this.$message.success('导出成功')\r\n      } catch (error) {\r\n        this.$message.error('导出失败：' + error.message)\r\n      }\r\n    },\r\n    async exportActivities() {\r\n      try {\r\n        const response = await exportActivities()\r\n        const blob = new Blob([response.data])\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = `activities_${new Date().toISOString().split('T')[0]}.xlsx`\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        this.$message.success('导出成功')\r\n      } catch (error) {\r\n        this.$message.error('导出失败：' + error.message)\r\n      }\r\n    },\r\n    handleFilterChange() {\r\n      this.fetchDashboardData()\r\n    },\r\n    resetFilter() {\r\n      this.filterForm = {\r\n        dateRange: [],\r\n        dataType: 'all'\r\n      }\r\n      this.fetchDashboardData()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.admin-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-form {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n.dashboard-content {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.user-stats,\r\n.system-status,\r\n.activity-list {\r\n  min-height: 200px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n}\r\n\r\n.stat-label {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n\r\n.chart-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.system-metrics {\r\n  margin-top: 20px;\r\n}\r\n\r\n.system-metrics .el-progress {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.el-timeline {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n</style>"],"mappings":"AAmLA,SAASA,iBAAgB,QAAS,iBAAgB;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,gBAAe,QAAS,cAAa;AACxE,SAASC,OAAO,EAAEC,QAAO,QAAS,yBAAwB;AAC1D,OAAO,KAAKC,OAAM,MAAO,SAAQ;AAEjC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVJ,OAAO;IACPC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,UAAU,EAAE,CAAC;QACbC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;QACZC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC;QACdC,SAAS,EAAE;MACb,CAAC;MACDC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;QACPZ,KAAK,EAAE,KAAK;QACZa,MAAM,EAAE,KAAK;QACbF,UAAU,EAAE;MACd,CAAC;MACDG,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE,IAAI;MACtBC,aAAa,EAAE,IAAI;MACnBC,UAAU,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ,CAAC;MACDC,aAAa,EAAE,CACb;QACEC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAEA,CAAA,KAAM;UACX,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC;UACrB,MAAMC,KAAI,GAAI,IAAID,IAAI,CAAC;UACvBC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,IAAI,IAAG,GAAI,IAAG,GAAI,EAAC,GAAI,CAAC;UACpD,OAAO,CAACF,KAAK,EAAEF,GAAG;QACpB;MACF,CAAC,EACD;QACEF,IAAI,EAAE,OAAO;QACbC,KAAK,EAAEA,CAAA,KAAM;UACX,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC;UACrB,MAAMC,KAAI,GAAI,IAAID,IAAI,CAAC;UACvBC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,IAAI,IAAG,GAAI,IAAG,GAAI,EAAC,GAAI,EAAE;UACrD,OAAO,CAACF,KAAK,EAAEF,GAAG;QACpB;MACF,CAAC,EACD;QACEF,IAAI,EAAE,OAAO;QACbC,KAAK,EAAEA,CAAA,KAAM;UACX,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC;UACrB,MAAMC,KAAI,GAAI,IAAID,IAAI,CAAC;UACvBC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,IAAI,IAAG,GAAI,IAAG,GAAI,EAAC,GAAI,EAAE;UACrD,OAAO,CAACF,KAAK,EAAEF,GAAG;QACpB;MACF;IAEJ;EACF,CAAC;EACD,MAAMK,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,kBAAkB,CAAC;EAChC,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACC,aAAa,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAML,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAM;UAAE/B;QAAK,IAAI,MAAMT,iBAAiB,CAAC;QACzC,IAAI,CAACU,KAAI,GAAID,IAAI,CAACC,KAAI;QACtB,IAAI,CAACI,YAAW,GAAIL,IAAI,CAACK,YAAW;QACpC,IAAI,CAACM,UAAS,GAAIX,IAAI,CAACW,UAAS;QAChC,IAAI,CAACC,UAAS,GAAIZ,IAAI,CAACY,UAAS;QAChC,IAAI,CAACyB,YAAY,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,SAAQ,GAAIA,KAAK,CAACE,OAAO;MAC/C;IACF,CAAC;IACDP,UAAUA,CAAA,EAAG;MACX,IAAI,CAAClB,SAAQ,GAAIlB,OAAO,CAAC4C,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC3B,SAAS;MAClD,IAAI,CAACC,cAAa,GAAInB,OAAO,CAAC4C,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC1B,cAAc;MAC5D,IAAI,CAACC,gBAAe,GAAIpB,OAAO,CAAC4C,IAAI,CAAC,IAAI,CAACC,KAAK,CAACzB,gBAAgB;MAChE,IAAI,CAACC,aAAY,GAAIrB,OAAO,CAAC4C,IAAI,CAAC,IAAI,CAACC,KAAK,CAACxB,aAAa;MAC1D,IAAI,CAACmB,YAAY,CAAC;IACpB,CAAC;IACDF,aAAaA,CAAA,EAAG;MACd,CAAC,IAAI,CAACpB,SAAS,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAACC,aAAa,CAAC,CAACyB,OAAO,CAACC,KAAI,IAAK;QAChG,IAAIA,KAAK,EAAE;UACTA,KAAK,CAACC,OAAO,CAAC;QAChB;MACF,CAAC;IACH,CAAC;IACDR,YAAYA,CAAA,EAAG;MACb,IAAI,CAACS,eAAe,CAAC;MACrB,IAAI,CAACC,oBAAoB,CAAC;MAC1B,IAAI,CAACC,sBAAsB,CAAC;MAC5B,IAAI,CAACC,mBAAmB,CAAC;IAC3B,CAAC;IACDH,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAAC/B,SAAS,EAAE;MAErB,MAAMmC,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACNC,MAAM,EAAE,UAAU;UAClBC,IAAI,EAAE;QACR,CAAC;QACDC,MAAM,EAAE,CACN;UACE1D,IAAI,EAAE,MAAM;UACZ2D,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE,KAAK;UACb1D,IAAI,EAAE,CACJ;YAAEwB,KAAK,EAAE,IAAI,CAACvB,KAAK,CAACE,OAAO;YAAEL,IAAI,EAAE;UAAK,CAAC,EACzC;YAAE0B,KAAK,EAAE,IAAI,CAACvB,KAAK,CAACG,QAAQ;YAAEN,IAAI,EAAE;UAAK,EAC1C;UACD6D,QAAQ,EAAE;YACRC,SAAS,EAAE;cACTC,UAAU,EAAE,EAAE;cACdC,aAAa,EAAE,CAAC;cAChBC,WAAW,EAAE;YACf;UACF;QACF;MAEJ;MAEA,IAAI,CAAChD,SAAS,CAACiD,SAAS,CAACd,MAAM;IACjC,CAAC;IACDH,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAAC/B,cAAc,EAAE;MAE1B,MAAMkC,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACNrD,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI;QAC1B,CAAC;QACDiE,KAAK,EAAE;UACLR,IAAI,EAAE,UAAU;UAChBzD,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC3C,CAAC;QACDkE,KAAK,EAAE;UACLT,IAAI,EAAE;QACR,CAAC;QACDD,MAAM,EAAE,CACN;UACE1D,IAAI,EAAE,KAAK;UACX2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;QACpC,CAAC,EACD;UACEF,IAAI,EAAE,IAAI;UACV2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/B,CAAC,EACD;UACEF,IAAI,EAAE,IAAI;UACV2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;QACnC;MAEJ;MAEA,IAAI,CAACgB,cAAc,CAACgD,SAAS,CAACd,MAAM;IACtC,CAAC;IACDF,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAAC/B,gBAAgB,EAAE;MAE5B,MAAMiC,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACNrD,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI;QAC1B,CAAC;QACDiE,KAAK,EAAE;UACLR,IAAI,EAAE,UAAU;UAChBzD,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC7D,CAAC;QACDkE,KAAK,EAAE;UACLT,IAAI,EAAE,OAAO;UACbU,GAAG,EAAE;QACP,CAAC;QACDX,MAAM,EAAE,CACN;UACE1D,IAAI,EAAE,KAAK;UACX2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/B,CAAC,EACD;UACEF,IAAI,EAAE,IAAI;UACV2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/B,CAAC,EACD;UACEF,IAAI,EAAE,IAAI;UACV2D,IAAI,EAAE,MAAM;UACZzD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/B;MAEJ;MAEA,IAAI,CAACiB,gBAAgB,CAAC+C,SAAS,CAACd,MAAM;IACxC,CAAC;IACDD,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAAC/B,aAAa,EAAE;MAEzB,MAAMgC,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfgB,WAAW,EAAE;YACXX,IAAI,EAAE;UACR;QACF,CAAC;QACDJ,MAAM,EAAE;UACNrD,IAAI,EAAE,CAAC,MAAM;QACf,CAAC;QACDiE,KAAK,EAAE;UACLR,IAAI,EAAE,UAAU;UAChBzD,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QACjD,CAAC;QACDkE,KAAK,EAAE;UACLT,IAAI,EAAE;QACR,CAAC;QACDD,MAAM,EAAE,CACN;UACE1D,IAAI,EAAE,MAAM;UACZ2D,IAAI,EAAE,KAAK;UACXzD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAC7B;MAEJ;MAEA,IAAI,CAACkB,aAAa,CAAC8C,SAAS,CAACd,MAAM;IACrC,CAAC;IACDmB,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,WAAU;MAClC,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,SAAQ;MAChC,OAAO,SAAQ;IACjB,CAAC;IACDC,eAAeA,CAACD,KAAK,EAAE;MACrB,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,WAAU;MAClC,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,SAAQ;MAChC,OAAO,SAAQ;IACjB,CAAC;IACDE,aAAaA,CAACF,KAAK,EAAE;MACnB,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,WAAU;MAClC,IAAIA,KAAI,IAAK,EAAE,EAAE,OAAO,SAAQ;MAChC,OAAO,SAAQ;IACjB,CAAC;IACD,MAAMG,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC5D,OAAO,CAACZ,KAAI,GAAI,IAAG;MACxB,IAAI;QACF,MAAM;UAAED;QAAK,IAAI,MAAMT,iBAAiB,CAAC;QACzC,IAAI,CAACU,KAAI,GAAID,IAAI,CAACC,KAAI;QACtB,IAAI,CAACoC,YAAY,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,WAAU,GAAIA,KAAK,CAACE,OAAO;MACjD,UAAU;QACR,IAAI,CAAC3B,OAAO,CAACZ,KAAI,GAAI,KAAI;MAC3B;IACF,CAAC;IACD,MAAMyE,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,CAAC7D,OAAO,CAACC,MAAK,GAAI,IAAG;MACzB,IAAI;QACF,MAAM;UAAEd;QAAK,IAAI,MAAMT,iBAAiB,CAAC;QACzC,IAAI,CAACc,YAAW,GAAIL,IAAI,CAACK,YAAW;QACpC,IAAI,CAACM,UAAS,GAAIX,IAAI,CAACW,UAAS;QAChC,IAAI,CAAC0B,YAAY,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,WAAU,GAAIA,KAAK,CAACE,OAAO;MACjD,UAAU;QACR,IAAI,CAAC3B,OAAO,CAACC,MAAK,GAAI,KAAI;MAC5B;IACF,CAAC;IACD,MAAM6D,iBAAiBA,CAAA,EAAG;MACxB,IAAI,CAAC9D,OAAO,CAACD,UAAS,GAAI,IAAG;MAC7B,IAAI;QACF,MAAM;UAAEZ;QAAK,IAAI,MAAMT,iBAAiB,CAAC;QACzC,IAAI,CAACqB,UAAS,GAAIZ,IAAI,CAACY,UAAS;QAChC,IAAI,CAACyB,YAAY,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,WAAU,GAAIA,KAAK,CAACE,OAAO;MACjD,UAAU;QACR,IAAI,CAAC3B,OAAO,CAACD,UAAS,GAAI,KAAI;MAChC;IACF,CAAC;IACD,MAAMgE,YAAYA,CAACC,OAAO,EAAE;MAC1B,IAAI;QACF,IAAIC,QAAO;QACX,QAAQD,OAAO;UACb,KAAK,aAAa;YAChBC,QAAO,GAAI,MAAMtF,WAAW,CAAC;YAC7B;UACF,KAAK,aAAa;YAChBsF,QAAO,GAAI,MAAMrF,WAAW,CAAC;YAC7B;UACF;YACE;QACJ;QAEA,MAAMsF,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAAC9E,IAAI,CAAC;QACrC,MAAMiF,GAAE,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI;QAC3C,MAAMM,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;QACvCF,IAAI,CAACG,IAAG,GAAIP,GAAE;QACdI,IAAI,CAACI,QAAO,GAAI,GAAGZ,OAAO,IAAI,IAAInD,IAAI,CAAC,CAAC,CAACgE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAM;QAC1EL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI;QAC9BA,IAAI,CAACS,KAAK,CAAC;QACXR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI;QAC9BH,MAAM,CAACC,GAAG,CAACa,eAAe,CAACf,GAAG;QAE9B,IAAI,CAAC1C,QAAQ,CAAC0D,OAAO,CAAC,MAAM;MAC9B,EAAE,OAAO3D,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,OAAM,GAAIA,KAAK,CAACE,OAAO;MAC7C;IACF,CAAC;IACD,MAAM9C,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMoF,QAAO,GAAI,MAAMpF,gBAAgB,CAAC;QACxC,MAAMqF,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAAC9E,IAAI,CAAC;QACrC,MAAMiF,GAAE,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI;QAC3C,MAAMM,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;QACvCF,IAAI,CAACG,IAAG,GAAIP,GAAE;QACdI,IAAI,CAACI,QAAO,GAAI,cAAc,IAAI/D,IAAI,CAAC,CAAC,CAACgE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAM;QAC1EL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI;QAC9BA,IAAI,CAACS,KAAK,CAAC;QACXR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI;QAC9BH,MAAM,CAACC,GAAG,CAACa,eAAe,CAACf,GAAG;QAE9B,IAAI,CAAC1C,QAAQ,CAAC0D,OAAO,CAAC,MAAM;MAC9B,EAAE,OAAO3D,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,OAAM,GAAIA,KAAK,CAACE,OAAO;MAC7C;IACF,CAAC;IACD0D,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACnE,kBAAkB,CAAC;IAC1B,CAAC;IACDoE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChF,UAAS,GAAI;QAChBC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ;MACA,IAAI,CAACU,kBAAkB,CAAC;IAC1B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}