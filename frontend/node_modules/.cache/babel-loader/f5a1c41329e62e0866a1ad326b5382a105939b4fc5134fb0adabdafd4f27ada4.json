{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport router from '@/router';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在请求头中添加token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n\n  // 如果是文件下载，直接返回\n  if (response.config.responseType === 'blob') {\n    return response;\n  }\n\n  // 根据自定义错误码判断请求是否成功\n  if (res.code && res.code !== 200) {\n    ElMessage({\n      message: res.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 401: 未登录或token过期\n    if (res.code === 401) {\n      store.dispatch('auth/logout');\n      router.push('/login');\n    }\n    return Promise.reject(new Error(res.message || '请求失败'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('响应错误:', error);\n  let message = '请求失败';\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        message = '未授权，请重新登录';\n        store.dispatch('auth/logout');\n        router.push('/login');\n        break;\n      case 403:\n        message = '拒绝访问';\n        break;\n      case 404:\n        message = '请求错误，未找到该资源';\n        break;\n      case 500:\n        message = '服务器错误';\n        break;\n      default:\n        message = `请求失败: ${error.response.status}`;\n    }\n  } else if (error.request) {\n    message = '服务器无响应';\n  } else {\n    message = error.message;\n  }\n  ElMessage({\n    message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","router","service","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","error","console","Promise","reject","response","res","data","responseType","code","message","type","duration","dispatch","push","Error","status"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport router from '@/router'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:3000/api',\r\n  timeout: 15000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 在请求头中添加token\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求错误:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n\r\n    // 如果是文件下载，直接返回\r\n    if (response.config.responseType === 'blob') {\r\n      return response\r\n    }\r\n\r\n    // 根据自定义错误码判断请求是否成功\r\n    if (res.code && res.code !== 200) {\r\n      ElMessage({\r\n        message: res.message || '请求失败',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 401: 未登录或token过期\r\n      if (res.code === 401) {\r\n        store.dispatch('auth/logout')\r\n        router.push('/login')\r\n      }\r\n      return Promise.reject(new Error(res.message || '请求失败'))\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.error('响应错误:', error)\r\n    let message = '请求失败'\r\n    \r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          message = '未授权，请重新登录'\r\n          store.dispatch('auth/logout')\r\n          router.push('/login')\r\n          break\r\n        case 403:\r\n          message = '拒绝访问'\r\n          break\r\n        case 404:\r\n          message = '请求错误，未找到该资源'\r\n          break\r\n        case 500:\r\n          message = '服务器错误'\r\n          break\r\n        default:\r\n          message = `请求失败: ${error.response.status}`\r\n      }\r\n    } else if (error.request) {\r\n      message = '服务器无响应'\r\n    } else {\r\n      message = error.message\r\n    }\r\n\r\n    ElMessage({\r\n      message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,OAAO,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/BU,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEzB;EACA,IAAIF,QAAQ,CAACT,MAAM,CAACY,YAAY,KAAK,MAAM,EAAE;IAC3C,OAAOH,QAAQ;EACjB;;EAEA;EACA,IAAIC,GAAG,CAACG,IAAI,IAAIH,GAAG,CAACG,IAAI,KAAK,GAAG,EAAE;IAChCvB,SAAS,CAAC;MACRwB,OAAO,EAAEJ,GAAG,CAACI,OAAO,IAAI,MAAM;MAC9BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIN,GAAG,CAACG,IAAI,KAAK,GAAG,EAAE;MACpBtB,KAAK,CAAC0B,QAAQ,CAAC,aAAa,CAAC;MAC7BzB,MAAM,CAAC0B,IAAI,CAAC,QAAQ,CAAC;IACvB;IACA,OAAOX,OAAO,CAACC,MAAM,CAAC,IAAIW,KAAK,CAACT,GAAG,CAACI,OAAO,IAAI,MAAM,CAAC,CAAC;EACzD,CAAC,MAAM;IACL,OAAOJ,GAAG;EACZ;AACF,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,IAAIS,OAAO,GAAG,MAAM;EAEpB,IAAIT,KAAK,CAACI,QAAQ,EAAE;IAClB,QAAQJ,KAAK,CAACI,QAAQ,CAACW,MAAM;MAC3B,KAAK,GAAG;QACNN,OAAO,GAAG,WAAW;QACrBvB,KAAK,CAAC0B,QAAQ,CAAC,aAAa,CAAC;QAC7BzB,MAAM,CAAC0B,IAAI,CAAC,QAAQ,CAAC;QACrB;MACF,KAAK,GAAG;QACNJ,OAAO,GAAG,MAAM;QAChB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,aAAa;QACvB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,OAAO;QACjB;MACF;QACEA,OAAO,GAAG,SAAST,KAAK,CAACI,QAAQ,CAACW,MAAM,EAAE;IAC9C;EACF,CAAC,MAAM,IAAIf,KAAK,CAACP,OAAO,EAAE;IACxBgB,OAAO,GAAG,QAAQ;EACpB,CAAC,MAAM;IACLA,OAAO,GAAGT,KAAK,CAACS,OAAO;EACzB;EAEAxB,SAAS,CAAC;IACRwB,OAAO;IACPC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOT,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}