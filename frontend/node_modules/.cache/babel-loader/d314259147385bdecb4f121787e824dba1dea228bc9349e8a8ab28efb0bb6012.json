{"ast":null,"code":"import PostAPI from '@/api/posts';\nconst state = {\n  posts: [],\n  currentPost: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_POSTS(state, posts) {\n    state.posts = posts;\n  },\n  SET_CURRENT_POST(state, post) {\n    state.currentPost = post;\n  },\n  ADD_POST(state, post) {\n    state.posts.unshift(post);\n  },\n  SET_LOADING(state, isLoading) {\n    state.loading = isLoading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  // 获取圈子帖子\n  async fetchCirclePosts({\n    commit\n  }, circleId) {\n    commit('SET_LOADING', true);\n    try {\n      const posts = await PostAPI.getByCircle(circleId);\n      commit('SET_POSTS', posts);\n      commit('SET_ERROR', null);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 创建帖子\n  async createPost({\n    commit\n  }, postData) {\n    commit('SET_LOADING', true);\n    try {\n      const newPost = await PostAPI.create(postData);\n      commit('ADD_POST', newPost);\n      commit('SET_ERROR', null);\n      return newPost;\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取帖子详情\n  async fetchPostDetail({\n    commit\n  }, postId) {\n    commit('SET_LOADING', true);\n    try {\n      const post = await PostAPI.getDetail(postId);\n      commit('SET_CURRENT_POST', post);\n      commit('SET_ERROR', null);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取某本书的相关帖子\n  async fetchRelatedPosts({\n    commit\n  }, bookId) {\n    commit('SET_LOADING', true);\n    try {\n      const posts = await PostAPI.getByBook(bookId);\n      commit('SET_POSTS', posts);\n      commit('SET_ERROR', null);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      commit('SET_POSTS', []); // 发生错误时清空帖子列表\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["PostAPI","state","posts","currentPost","loading","error","mutations","SET_POSTS","SET_CURRENT_POST","post","ADD_POST","unshift","SET_LOADING","isLoading","SET_ERROR","actions","fetchCirclePosts","commit","circleId","getByCircle","message","createPost","postData","newPost","create","fetchPostDetail","postId","getDetail","fetchRelatedPosts","bookId","getByBook","namespaced"],"sources":["E:/moyun-reading-platform/moyun-reading-platform/frontend/src/store/modules/posts.js"],"sourcesContent":["import PostAPI from '@/api/posts'\r\n\r\nconst state = {\r\n  posts: [],\r\n  currentPost: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst mutations = {\r\n  SET_POSTS(state, posts) {\r\n    state.posts = posts\r\n  },\r\n  SET_CURRENT_POST(state, post) {\r\n    state.currentPost = post\r\n  },\r\n  ADD_POST(state, post) {\r\n    state.posts.unshift(post)\r\n  },\r\n  SET_LOADING(state, isLoading) {\r\n    state.loading = isLoading\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 获取圈子帖子\r\n  async fetchCirclePosts({ commit }, circleId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const posts = await PostAPI.getByCircle(circleId)\r\n      commit('SET_POSTS', posts)\r\n      commit('SET_ERROR', null)\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 创建帖子\r\n  async createPost({ commit }, postData) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const newPost = await PostAPI.create(postData)\r\n      commit('ADD_POST', newPost)\r\n      commit('SET_ERROR', null)\r\n      return newPost\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 获取帖子详情\r\n  async fetchPostDetail({ commit }, postId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const post = await PostAPI.getDetail(postId)\r\n      commit('SET_CURRENT_POST', post)\r\n      commit('SET_ERROR', null)\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 获取某本书的相关帖子\r\n  async fetchRelatedPosts({ commit }, bookId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const posts = await PostAPI.getByBook(bookId)\r\n      commit('SET_POSTS', posts)\r\n      commit('SET_ERROR', null)\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      commit('SET_POSTS', []) // 发生错误时清空帖子列表\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}