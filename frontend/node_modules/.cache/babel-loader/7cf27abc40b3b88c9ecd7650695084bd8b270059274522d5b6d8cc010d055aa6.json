{"ast":null,"code":"import axios from 'axios';\nimport { getAuthHeader } from './utils';\nconst API_URL = process.env.VUE_APP_API_BASE_URL + '/circles';\nclass CircleAPI {\n  // 创建圈子（导师权限）\n  static async create(name, description) {\n    try {\n      const response = await axios.post(API_URL, {\n        name,\n        description\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 获取我的圈子\n  static async getMyCircle() {\n    try {\n      const response = await axios.get(`${API_URL}/my`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 添加成员到圈子\n  static async addMember(circleId, userId) {\n    try {\n      const response = await axios.post(`${API_URL}/${circleId}/members`, {\n        userId\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n}\nexport default CircleAPI;","map":{"version":3,"names":["axios","getAuthHeader","API_URL","process","env","VUE_APP_API_BASE_URL","CircleAPI","create","name","description","response","post","headers","data","error","_handleError","getMyCircle","get","addMember","circleId","userId"],"sources":["E:/moyun-reading-platform/moyun-reading-platform/frontend/src/api/circles.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthHeader } from './utils';\r\n\r\nconst API_URL = process.env.VUE_APP_API_BASE_URL + '/circles';\r\n\r\nclass CircleAPI {\r\n  // 创建圈子（导师权限）\r\n  static async create(name, description) {\r\n    try {\r\n      const response = await axios.post(\r\n        API_URL,\r\n        { name, description },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 获取我的圈子\r\n  static async getMyCircle() {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/my`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 添加成员到圈子\r\n  static async addMember(circleId, userId) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/${circleId}/members`,\r\n        { userId },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default CircleAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,SAAS;AAEvC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAG,UAAU;AAE7D,MAAMC,SAAS,CAAC;EACd;EACA,aAAaC,MAAMA,CAACC,IAAI,EAAEC,WAAW,EAAE;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/BT,OAAO,EACP;QAAEM,IAAI;QAAEC;MAAY,CAAC,EACrB;QAAEG,OAAO,EAAEX,aAAa,CAAC;MAAE,CAC7B,CAAC;MACD,OAAOS,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaE,WAAWA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACiB,GAAG,CAAC,GAAGf,OAAO,KAAK,EAAE;QAChDU,OAAO,EAAEX,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOS,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaI,SAASA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACvC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,GAAGT,OAAO,IAAIiB,QAAQ,UAAU,EAChC;QAAEC;MAAO,CAAC,EACV;QAAER,OAAO,EAAEX,aAAa,CAAC;MAAE,CAC7B,CAAC;MACD,OAAOS,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;AACF;AAEA,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}