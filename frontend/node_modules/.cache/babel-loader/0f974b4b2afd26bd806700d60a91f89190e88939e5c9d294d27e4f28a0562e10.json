{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport BookAPI from '@/api/books';\nconst state = {\n  books: [],\n  currentBook: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_BOOKS(state, books) {\n    state.books = Array.isArray(books) ? books : [];\n  },\n  SET_CURRENT_BOOK(state, book) {\n    state.currentBook = book;\n  },\n  SET_LOADING(state, isLoading) {\n    state.loading = isLoading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  },\n  ADD_BOOK(state, book) {\n    state.books.unshift(book);\n  }\n};\nconst actions = {\n  // 获取所有书籍\n  async fetchBooks({\n    commit\n  }, params = {}) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await BookAPI.getAll(params);\n      // 确保返回的数据是数组\n      const books = Array.isArray(response) ? response : Array.isArray(response.items) ? response.items : [];\n      commit('SET_BOOKS', books);\n      commit('SET_ERROR', null);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      commit('SET_BOOKS', []); // 发生错误时清空书籍列表\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取书籍详情\n  async fetchBookDetail({\n    commit\n  }, bookId) {\n    commit('SET_LOADING', true);\n    try {\n      const book = await BookAPI.getDetail(bookId);\n      commit('SET_CURRENT_BOOK', book);\n      commit('SET_ERROR', null);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      commit('SET_CURRENT_BOOK', null); // 发生错误时清空当前书籍\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 推荐新书\n  async recommendBook({\n    commit\n  }, bookData) {\n    commit('SET_LOADING', true);\n    try {\n      const newBook = await BookAPI.recommendBook(bookData);\n      commit('ADD_BOOK', newBook);\n      commit('SET_ERROR', null);\n      return newBook;\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  }\n};\nconst getters = {\n  recommendedBooks: (state, getters, rootState) => state.books.filter(book => book?.recommender_id === rootState.auth.user?.id)\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["BookAPI","state","books","currentBook","loading","error","mutations","SET_BOOKS","Array","isArray","SET_CURRENT_BOOK","book","SET_LOADING","isLoading","SET_ERROR","ADD_BOOK","unshift","actions","fetchBooks","commit","params","response","getAll","items","message","fetchBookDetail","bookId","getDetail","recommendBook","bookData","newBook","getters","recommendedBooks","rootState","filter","recommender_id","auth","user","id","namespaced"],"sources":["C:/Users/仲佳泽/Desktop/大学作业/软件工程/moyun-reading-platform/frontend/src/store/modules/books.js"],"sourcesContent":["import BookAPI from '@/api/books'\r\n\r\nconst state = {\r\n  books: [],\r\n  currentBook: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst mutations = {\r\n  SET_BOOKS(state, books) {\r\n    state.books = Array.isArray(books) ? books : []\r\n  },\r\n  SET_CURRENT_BOOK(state, book) {\r\n    state.currentBook = book\r\n  },\r\n  SET_LOADING(state, isLoading) {\r\n    state.loading = isLoading\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error\r\n  },\r\n  ADD_BOOK(state, book) {\r\n    state.books.unshift(book)\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 获取所有书籍\r\n  async fetchBooks({ commit }, params = {}) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await BookAPI.getAll(params)\r\n      // 确保返回的数据是数组\r\n      const books = Array.isArray(response) ? response : \r\n                   Array.isArray(response.items) ? response.items : []\r\n      commit('SET_BOOKS', books)\r\n      commit('SET_ERROR', null)\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      commit('SET_BOOKS', []) // 发生错误时清空书籍列表\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 获取书籍详情\r\n  async fetchBookDetail({ commit }, bookId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const book = await BookAPI.getDetail(bookId)\r\n      commit('SET_CURRENT_BOOK', book)\r\n      commit('SET_ERROR', null)\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      commit('SET_CURRENT_BOOK', null) // 发生错误时清空当前书籍\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 推荐新书\r\n  async recommendBook({ commit }, bookData) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const newBook = await BookAPI.recommendBook(bookData)\r\n      commit('ADD_BOOK', newBook)\r\n      commit('SET_ERROR', null)\r\n      return newBook\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  }\r\n}\r\n\r\nconst getters = {\r\n  recommendedBooks: (state, getters, rootState) => \r\n    state.books.filter(book => book?.recommender_id === rootState.auth.user?.id)\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}