{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create-post-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"发表读后感\", -1 /* HOISTED */)), _createVNode(_component_el_divider), _createVNode(_component_el_form, {\n    model: $data.form,\n    rules: $data.rules,\n    ref: \"postForm\",\n    onSubmit: _withModifiers($options.handleSubmit, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"title\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.title = $event),\n        placeholder: \"标题\",\n        maxlength: \"100\",\n        \"show-word-limit\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"content\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.content,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.content = $event),\n        type: \"textarea\",\n        rows: 10,\n        placeholder: \"写下你的读后感...\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        \"native-type\": \"submit\",\n        loading: $data.loading\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 发布 \")])),\n        _: 1 /* STABLE */,\n        __: [2]\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\", \"onSubmit\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_divider","_component_el_form","model","$data","form","rules","ref","onSubmit","_withModifiers","$options","handleSubmit","default","_withCtx","_component_el_form_item","prop","_component_el_input","modelValue","title","_cache","$event","placeholder","maxlength","_","content","type","rows","_component_el_button","loading","_createTextVNode","__"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\views\\posts\\CreatePost.vue"],"sourcesContent":["<template>\r\n    <div class=\"create-post-container\">\r\n      <h2>发表读后感</h2>\r\n      <el-divider />\r\n      \r\n      <el-form \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        ref=\"postForm\"\r\n        @submit.native.prevent=\"handleSubmit\"\r\n      >\r\n        <el-form-item prop=\"title\">\r\n          <el-input\r\n            v-model=\"form.title\"\r\n            placeholder=\"标题\"\r\n            maxlength=\"100\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item prop=\"content\">\r\n          <el-input\r\n            v-model=\"form.content\"\r\n            type=\"textarea\"\r\n            :rows=\"10\"\r\n            placeholder=\"写下你的读后感...\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button \r\n            type=\"primary\" \r\n            native-type=\"submit\"\r\n            :loading=\"loading\"\r\n          >\r\n            发布\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapActions } from 'vuex'\r\n  \r\n  export default {\r\n    name: 'CreatePostView',\r\n    data() {\r\n      return {\r\n        form: {\r\n          title: '',\r\n          content: '',\r\n          circleId: null,\r\n          bookId: null\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入标题', trigger: 'blur' },\r\n            { min: 5, max: 100, message: '长度在5到100个字符', trigger: 'blur' }\r\n          ],\r\n          content: [\r\n            { required: true, message: '请输入内容', trigger: 'blur' },\r\n            { min: 10, message: '内容至少10个字符', trigger: 'blur' }\r\n          ]\r\n        },\r\n        loading: false\r\n      }\r\n    },\r\n    created() {\r\n      this.form.circleId = this.$route.query.circleId\r\n      this.form.bookId = this.$route.query.bookId\r\n    },\r\n    methods: {\r\n      ...mapActions('posts', ['createPost']),\r\n      async handleSubmit() {\r\n        try {\r\n          this.loading = true\r\n          await this.$refs.postForm.validate()\r\n          const newPost = await this.createPost(this.form)\r\n          this.$message.success('发布成功！')\r\n          \r\n          // 根据来源跳转不同页面\r\n          if (this.form.bookId) {\r\n            this.$router.push(`/books/${this.form.bookId}`)\r\n          } else if (this.form.circleId) {\r\n            this.$router.push(`/my-circle`)\r\n          } else {\r\n            this.$router.push('/')\r\n          }\r\n        } catch (error) {\r\n          this.$message.error(error.message)\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .create-post-container {\r\n    padding: 20px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAuB;;;;;;;uBAAlCC,mBAAA,CAsCM,OAtCNC,UAsCM,G,0BArCJC,mBAAA,CAAc,YAAV,OAAK,sBACTC,YAAA,CAAcC,qBAAA,GAEdD,YAAA,CAiCUE,kBAAA;IAhCPC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IACXC,KAAK,EAAEF,KAAA,CAAAE,KAAK;IACbC,GAAG,EAAC,UAAU;IACbC,QAAM,EATfC,cAAA,CASgCC,QAAA,CAAAC,YAAY;;IAT5CC,OAAA,EAAAC,QAAA,CAWQ,MAOe,CAPfb,YAAA,CAOec,uBAAA;MAPDC,IAAI,EAAC;IAAO;MAXlCH,OAAA,EAAAC,QAAA,CAYU,MAKE,CALFb,YAAA,CAKEgB,mBAAA;QAjBZC,UAAA,EAaqBb,KAAA,CAAAC,IAAI,CAACa,KAAK;QAb/B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaqBhB,KAAA,CAAAC,IAAI,CAACa,KAAK,GAAAE,MAAA;QACnBC,WAAW,EAAC,IAAI;QAChBC,SAAS,EAAC,KAAK;QACf,iBAAe,EAAf;;MAhBZC,CAAA;QAoBQvB,YAAA,CAOec,uBAAA;MAPDC,IAAI,EAAC;IAAS;MApBpCH,OAAA,EAAAC,QAAA,CAqBU,MAKE,CALFb,YAAA,CAKEgB,mBAAA;QA1BZC,UAAA,EAsBqBb,KAAA,CAAAC,IAAI,CAACmB,OAAO;QAtBjC,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBqBhB,KAAA,CAAAC,IAAI,CAACmB,OAAO,GAAAJ,MAAA;QACrBK,IAAI,EAAC,UAAU;QACdC,IAAI,EAAE,EAAE;QACTL,WAAW,EAAC;;MAzBxBE,CAAA;QA6BQvB,YAAA,CAQec,uBAAA;MArCvBF,OAAA,EAAAC,QAAA,CA8BU,MAMY,CANZb,YAAA,CAMY2B,oBAAA;QALVF,IAAI,EAAC,SAAS;QACd,aAAW,EAAC,QAAQ;QACnBG,OAAO,EAAExB,KAAA,CAAAwB;;QAjCtBhB,OAAA,EAAAC,QAAA,CAkCW,MAEDM,MAAA,QAAAA,MAAA,OApCVU,gBAAA,CAkCW,MAED,E;QApCVN,CAAA;QAAAO,EAAA;;MAAAP,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}