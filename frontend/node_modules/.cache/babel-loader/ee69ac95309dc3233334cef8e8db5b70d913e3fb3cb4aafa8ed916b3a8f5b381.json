{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"circle-container\"\n};\nconst _hoisted_2 = {\n  class: \"post-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_circle_sidebar = _resolveComponent(\"circle-sidebar\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_create_post_form = _resolveComponent(\"create-post-form\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_add_member_form = _resolveComponent(\"add-member-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_circle_sidebar, {\n        circle: _ctx.circle,\n        members: _ctx.members,\n        onAddMember: _cache[0] || (_cache[0] = $event => $data.showAddMemberDialog = true)\n      }, null, 8 /* PROPS */, [\"circle\", \"members\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 18\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [$options.isMember ? (_openBlock(), _createBlock(_component_create_post_form, {\n        key: 0,\n        \"circle-id\": _ctx.circle.id,\n        onCreated: $options.handlePostCreated\n      }, null, 8 /* PROPS */, [\"circle-id\", \"onCreated\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_post_list, {\n        posts: _ctx.posts,\n        loading: _ctx.loading,\n        onLoadMore: $options.loadMorePosts\n      }, null, 8 /* PROPS */, [\"posts\", \"loading\", \"onLoadMore\"])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_dialog, {\n    title: \"添加成员\",\n    modelValue: $data.showAddMemberDialog,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.showAddMemberDialog = $event),\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_add_member_form, {\n      \"circle-id\": _ctx.circle.id,\n      onSuccess: $options.handleMemberAdded\n    }, null, 8 /* PROPS */, [\"circle-id\", \"onSuccess\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","default","_withCtx","_component_el_col","span","_component_circle_sidebar","circle","_ctx","members","onAddMember","_cache","$event","$data","showAddMemberDialog","_","_createElementVNode","_hoisted_2","$options","isMember","_createBlock","_component_create_post_form","key","id","onCreated","handlePostCreated","_createCommentVNode","_component_post_list","posts","loading","onLoadMore","loadMorePosts","_component_el_dialog","title","modelValue","width","_component_add_member_form","onSuccess","handleMemberAdded"],"sources":["C:\\Users\\仲佳泽\\Desktop\\大学作业\\软件工程\\moyun-reading-platform\\frontend\\src\\views\\circles\\MyCircle.vue"],"sourcesContent":["<template>\r\n    <div class=\"circle-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <circle-sidebar \r\n            :circle=\"circle\" \r\n            :members=\"members\"\r\n            @add-member=\"showAddMemberDialog = true\"\r\n          />\r\n        </el-col>\r\n        <el-col :span=\"18\">\r\n          <div class=\"post-area\">\r\n            <create-post-form \r\n              v-if=\"isMember\"\r\n              :circle-id=\"circle.id\"\r\n              @created=\"handlePostCreated\"\r\n            />\r\n            \r\n            <post-list \r\n              :posts=\"posts\" \r\n              :loading=\"loading\"\r\n              @load-more=\"loadMorePosts\"\r\n            />\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <el-dialog \r\n        title=\"添加成员\" \r\n        v-model=\"showAddMemberDialog\"\r\n        width=\"30%\"\r\n      >\r\n        <add-member-form \r\n          :circle-id=\"circle.id\"\r\n          @success=\"handleMemberAdded\"\r\n        />\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapGetters, mapActions } from 'vuex'\r\n  import CircleSidebar from '@/components/CircleSidebar.vue'\r\n  import CreatePostForm from '@/components/CreatePostForm.vue'\r\n  import PostList from '@/components/PostList.vue'\r\n  import AddMemberForm from '@/components/AddMemberForm.vue'\r\n  \r\n  export default {\r\n    name: 'MyCircleView',\r\n    components: {\r\n      CircleSidebar,\r\n      CreatePostForm,\r\n      PostList,\r\n      AddMemberForm\r\n    },\r\n    data() {\r\n      return {\r\n        showAddMemberDialog: false,\r\n        page: 1,\r\n        pageSize: 10\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState('circles', ['circle', 'members', 'loading']),\r\n      ...mapState('posts', ['posts']),\r\n      ...mapGetters('auth', ['isMentor', 'currentUser']),\r\n      isMember() {\r\n        return this.members.some(m => m.id === this.currentUser.id)\r\n      }\r\n    },\r\n    async created() {\r\n      await this.fetchCircleData()\r\n    },\r\n    methods: {\r\n      ...mapActions('circles', ['fetchMyCircle']),\r\n      ...mapActions('posts', ['fetchCirclePosts']),\r\n      async fetchCircleData() {\r\n        await this.fetchMyCircle()\r\n        if (this.circle?.id) {\r\n          await this.fetchCirclePosts({\r\n            circleId: this.circle.id,\r\n            page: this.page,\r\n            pageSize: this.pageSize\r\n          })\r\n        }\r\n      },\r\n      handlePostCreated(newPost) {\r\n        this.posts.unshift(newPost)\r\n      },\r\n      handleMemberAdded() {\r\n        this.showAddMemberDialog = false\r\n        this.fetchCircleData()\r\n      },\r\n      async loadMorePosts() {\r\n        this.page++\r\n        await this.fetchCirclePosts({\r\n          circleId: this.circle.id,\r\n          page: this.page,\r\n          pageSize: this.pageSize\r\n        })\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .circle-container {\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .post-area {\r\n    padding: 0 20px;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;;EAUlBA,KAAK,EAAC;AAAW;;;;;;;;;uBAV5BC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,YAAA,CAuBSC,iBAAA;IAvBAC,MAAM,EAAE;EAAE;IAFzBC,OAAA,EAAAC,QAAA,CAGQ,MAMS,CANTJ,YAAA,CAMSK,iBAAA;MANAC,IAAI,EAAE;IAAC;MAHxBH,OAAA,EAAAC,QAAA,CAIU,MAIE,CAJFJ,YAAA,CAIEO,yBAAA;QAHCC,MAAM,EAAEC,IAAA,CAAAD,MAAM;QACdE,OAAO,EAAED,IAAA,CAAAC,OAAO;QAChBC,WAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,mBAAmB;;MAP5CC,CAAA;QAUQhB,YAAA,CAcSK,iBAAA;MAdAC,IAAI,EAAE;IAAE;MAVzBH,OAAA,EAAAC,QAAA,CAWU,MAYM,CAZNa,mBAAA,CAYM,OAZNC,UAYM,GAVIC,QAAA,CAAAC,QAAQ,I,cADhBC,YAAA,CAIEC,2BAAA;QAhBdC,GAAA;QAce,WAAS,EAAEd,IAAA,CAAAD,MAAM,CAACgB,EAAE;QACpBC,SAAO,EAAEN,QAAA,CAAAO;6DAfxBC,mBAAA,gBAkBY3B,YAAA,CAIE4B,oBAAA;QAHCC,KAAK,EAAEpB,IAAA,CAAAoB,KAAK;QACZC,OAAO,EAAErB,IAAA,CAAAqB,OAAO;QAChBC,UAAS,EAAEZ,QAAA,CAAAa;;MArB1BhB,CAAA;;IAAAA,CAAA;MA2BMhB,YAAA,CASYiC,oBAAA;IARVC,KAAK,EAAC,MAAM;IA5BpBC,UAAA,EA6BiBrB,KAAA,CAAAC,mBAAmB;IA7BpC,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6BiBC,KAAA,CAAAC,mBAAmB,GAAAF,MAAA;IAC5BuB,KAAK,EAAC;;IA9BdjC,OAAA,EAAAC,QAAA,CAgCQ,MAGE,CAHFJ,YAAA,CAGEqC,0BAAA;MAFC,WAAS,EAAE5B,IAAA,CAAAD,MAAM,CAACgB,EAAE;MACpBc,SAAO,EAAEnB,QAAA,CAAAoB;;IAlCpBvB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}