{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"circle-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.circles && _ctx.circles.length ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"我加入的圈子\", -1 /* HOISTED */)), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.circles, c => {\n      return _openBlock(), _createBlock(_component_el_col, {\n        span: 6,\n        key: c.id\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", null, _toDisplayString(c.name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(c.description), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _cache[1] || (_cache[1] = _createElementVNode(\"h3\", {\n    style: {\n      \"margin-top\": \"32px\"\n    }\n  }, \"所有圈子\", -1 /* HOISTED */)), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allCircles, c => {\n      return _openBlock(), _createBlock(_component_el_col, {\n        span: 6,\n        key: c.id\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, {\n          class: _normalizeClass({\n            'joined-circle': $options.isJoined(c.id)\n          })\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", null, _toDisplayString(c.name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(c.description), 1 /* TEXT */), _createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"mini\",\n            disabled: $options.isJoined(c.id),\n            onClick: $event => $options.joinCircle(c.id)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($options.isJoined(c.id) ? '已加入' : '加入圈子'), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"disabled\", \"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_ctx","circles","length","_Fragment","key","_createElementVNode","_createVNode","_component_el_row","gutter","default","_withCtx","_renderList","c","_createBlock","_component_el_col","span","id","_component_el_card","_toDisplayString","name","description","_","_createCommentVNode","style","allCircles","_normalizeClass","$options","isJoined","_component_el_button","type","size","disabled","onClick","$event","joinCircle","_createTextVNode"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\views\\circles\\MyCircle.vue"],"sourcesContent":["<template>\r\n    <div class=\"circle-container\">\r\n      <template v-if=\"circles && circles.length\">\r\n        <h3>我加入的圈子</h3>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\" v-for=\"c in circles\" :key=\"c.id\">\r\n            <el-card>\r\n              <div>{{ c.name }}</div>\r\n              <div>{{ c.description }}</div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </template>\r\n      <h3 style=\"margin-top: 32px;\">所有圈子</h3>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\" v-for=\"c in allCircles\" :key=\"c.id\">\r\n          <el-card :class=\"{ 'joined-circle': isJoined(c.id) }\">\r\n            <div>{{ c.name }}</div>\r\n            <div>{{ c.description }}</div>\r\n            <el-button \r\n              type=\"primary\" \r\n              size=\"mini\" \r\n              :disabled=\"isJoined(c.id)\"\r\n              @click=\"joinCircle(c.id)\">\r\n              {{ isJoined(c.id) ? '已加入' : '加入圈子' }}\r\n            </el-button>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapGetters, mapActions } from 'vuex'\r\n  import circlesApi from '@/api/circles'\r\n  \r\n  export default {\r\n    name: 'MyCircleView',\r\n    data() {\r\n      return {\r\n        page: 1,\r\n        pageSize: 10\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState('circles', ['circles', 'members', 'loading', 'allCircles']),\r\n      ...mapGetters('auth', ['isMentor', 'currentUser'])\r\n    },\r\n    async created() {\r\n      await this.fetchMyCircles()\r\n      await this.fetchAllCircles()\r\n    },\r\n    methods: {\r\n      ...mapActions('circles', ['fetchMyCircles', 'fetchAllCircles']),\r\n      isJoined(circleId) {\r\n        return this.circles.some(c => c.id === circleId)\r\n      },\r\n      async joinCircle(circleId) {\r\n        try {\r\n          await circlesApi.joinCircle(circleId)\r\n          this.$message.success('加入圈子成功')\r\n          await this.fetchMyCircles()\r\n        } catch (e) {\r\n          this.$message.error(e.message || '加入圈子失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .circle-container {\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .post-area {\r\n    padding: 0 20px;\r\n  }\r\n  \r\n  .joined-circle {\r\n    border: 2px solid #67c23a;\r\n    background: #f6ffed;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;;;;;;uBAA7BC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BYC,IAAA,CAAAC,OAAO,IAAID,IAAA,CAAAC,OAAO,CAACC,MAAM,I,cAAzCJ,mBAAA,CAUWK,SAAA;IAZjBC,GAAA;EAAA,I,0BAGQC,mBAAA,CAAe,YAAX,QAAM,sBACVC,YAAA,CAOSC,iBAAA;IAPAC,MAAM,EAAE;EAAE;IAJ3BC,OAAA,EAAAC,QAAA,CAK4B,MAAoB,E,kBAAtCZ,mBAAA,CAKSK,SAAA,QAVnBQ,WAAA,CAKwCX,IAAA,CAAAC,OAAO,EAAZW,CAAC;2BAA1BC,YAAA,CAKSC,iBAAA;QALAC,IAAI,EAAE,CAAC;QAAwBX,GAAG,EAAEQ,CAAC,CAACI;;QALzDP,OAAA,EAAAC,QAAA,CAMY,MAGU,CAHVJ,YAAA,CAGUW,kBAAA;UATtBR,OAAA,EAAAC,QAAA,CAOc,MAAuB,CAAvBL,mBAAA,CAAuB,aAAAa,gBAAA,CAAfN,CAAC,CAACO,IAAI,kBACdd,mBAAA,CAA8B,aAAAa,gBAAA,CAAtBN,CAAC,CAACQ,WAAW,iB;UARnCC,CAAA;;QAAAA,CAAA;;;IAAAA,CAAA;oCAAAC,mBAAA,gB,0BAaMjB,mBAAA,CAAuC;IAAnCkB,KAAyB,EAAzB;MAAA;IAAA;EAAyB,GAAC,MAAI,sBAClCjB,YAAA,CAcSC,iBAAA;IAdAC,MAAM,EAAE;EAAE;IAdzBC,OAAA,EAAAC,QAAA,CAe0B,MAAuB,E,kBAAzCZ,mBAAA,CAYSK,SAAA,QA3BjBQ,WAAA,CAesCX,IAAA,CAAAwB,UAAU,EAAfZ,CAAC;2BAA1BC,YAAA,CAYSC,iBAAA;QAZAC,IAAI,EAAE,CAAC;QAA2BX,GAAG,EAAEQ,CAAC,CAACI;;QAf1DP,OAAA,EAAAC,QAAA,CAgBU,MAUU,CAVVJ,YAAA,CAUUW,kBAAA;UAVApB,KAAK,EAhBzB4B,eAAA;YAAA,iBAgB8CC,QAAA,CAAAC,QAAQ,CAACf,CAAC,CAACI,EAAE;UAAA;;UAhB3DP,OAAA,EAAAC,QAAA,CAiBY,MAAuB,CAAvBL,mBAAA,CAAuB,aAAAa,gBAAA,CAAfN,CAAC,CAACO,IAAI,kBACdd,mBAAA,CAA8B,aAAAa,gBAAA,CAAtBN,CAAC,CAACQ,WAAW,kBACrBd,YAAA,CAMYsB,oBAAA;YALVC,IAAI,EAAC,SAAS;YACdC,IAAI,EAAC,MAAM;YACVC,QAAQ,EAAEL,QAAA,CAAAC,QAAQ,CAACf,CAAC,CAACI,EAAE;YACvBgB,OAAK,EAAAC,MAAA,IAAEP,QAAA,CAAAQ,UAAU,CAACtB,CAAC,CAACI,EAAE;;YAvBrCP,OAAA,EAAAC,QAAA,CAwBc,MAAqC,CAxBnDyB,gBAAA,CAAAjB,gBAAA,CAwBiBQ,QAAA,CAAAC,QAAQ,CAACf,CAAC,CAACI,EAAE,mC;YAxB9BK,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}