{"ast":null,"code":"import axios from 'axios';\nimport { getAuthHeader } from './utils';\nconst API_URL = '/api/circles';\nclass CircleAPI {\n  // 创建圈子（导师权限）\n  static async create(name, description) {\n    try {\n      const response = await axios.post(API_URL, {\n        name,\n        description\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 获取我的圈子\n  static async getMyCircle() {\n    try {\n      const response = await axios.get(`${API_URL}/my`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 添加成员到圈子\n  static async addMember(circleId, userId) {\n    try {\n      const response = await axios.post(`${API_URL}/${circleId}/members`, {\n        userId\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 获取所有圈子\n  static async getAll() {\n    try {\n      const response = await axios.get(API_URL, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n\n  // 当前用户加入圈子\n  static async joinCircle(circleId) {\n    try {\n      const response = await axios.post(`/api/circles/${circleId}/join`, {}, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      throw this._handleError(error);\n    }\n  }\n  static _handleError(error) {\n    if (error.response && error.response.data && error.response.data.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n}\nexport default CircleAPI;","map":{"version":3,"names":["axios","getAuthHeader","API_URL","CircleAPI","create","name","description","response","post","headers","data","error","_handleError","getMyCircle","get","addMember","circleId","userId","getAll","joinCircle","message","Error"],"sources":["E:/moyun-reading-platform/frontend/src/api/circles.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthHeader } from './utils';\r\n\r\nconst API_URL = '/api/circles';\r\n\r\nclass CircleAPI {\r\n  // 创建圈子（导师权限）\r\n  static async create(name, description) {\r\n    try {\r\n      const response = await axios.post(\r\n        API_URL,\r\n        { name, description },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 获取我的圈子\r\n  static async getMyCircle() {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/my`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 添加成员到圈子\r\n  static async addMember(circleId, userId) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/${circleId}/members`,\r\n        { userId },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 获取所有圈子\r\n  static async getAll() {\r\n    try {\r\n      const response = await axios.get(API_URL, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  // 当前用户加入圈子\r\n  static async joinCircle(circleId) {\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/circles/${circleId}/join`,\r\n        {},\r\n        { headers: getAuthHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this._handleError(error);\r\n    }\r\n  }\r\n\r\n  static _handleError(error) {\r\n    if (error.response && error.response.data && error.response.data.message) {\r\n      throw new Error(error.response.data.message)\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\nexport default CircleAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,SAAS;AAEvC,MAAMC,OAAO,GAAG,cAAc;AAE9B,MAAMC,SAAS,CAAC;EACd;EACA,aAAaC,MAAMA,CAACC,IAAI,EAAEC,WAAW,EAAE;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/BN,OAAO,EACP;QAAEG,IAAI;QAAEC;MAAY,CAAC,EACrB;QAAEG,OAAO,EAAER,aAAa,CAAC;MAAE,CAC7B,CAAC;MACD,OAAOM,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaE,WAAWA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGZ,OAAO,KAAK,EAAE;QAChDO,OAAO,EAAER,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOM,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaI,SAASA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACvC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,GAAGN,OAAO,IAAIc,QAAQ,UAAU,EAChC;QAAEC;MAAO,CAAC,EACV;QAAER,OAAO,EAAER,aAAa,CAAC;MAAE,CAC7B,CAAC;MACD,OAAOM,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaO,MAAMA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAACZ,OAAO,EAAE;QACxCO,OAAO,EAAER,aAAa,CAAC;MACzB,CAAC,CAAC;MACF,OAAOM,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;;EAEA;EACA,aAAaQ,UAAUA,CAACH,QAAQ,EAAE;IAChC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,gBAAgBQ,QAAQ,OAAO,EAC/B,CAAC,CAAC,EACF;QAAEP,OAAO,EAAER,aAAa,CAAC;MAAE,CAC7B,CAAC;MACD,OAAOM,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAChC;EACF;EAEA,OAAOC,YAAYA,CAACD,KAAK,EAAE;IACzB,IAAIA,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACG,IAAI,IAAIC,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACU,OAAO,EAAE;MACxE,MAAM,IAAIC,KAAK,CAACV,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACU,OAAO,CAAC;IAC9C;IACA,MAAMT,KAAK;EACb;AACF;AAEA,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}