{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['login']),\n    async handleLogin() {\n      try {\n        this.loading = true;\n        await this.$refs.loginForm.validate();\n        await this.login(this.form);\n        const redirect = this.$route.query.redirect || '/';\n        this.$router.push(redirect);\n      } catch (error) {\n        this.$message.error(error.message);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","form","username","password","rules","required","message","trigger","loading","methods","handleLogin","$refs","loginForm","validate","login","redirect","$route","query","$router","push","error","$message"],"sources":["C:\\Users\\仲佳泽\\Desktop\\大学作业\\软件工程\\moyun-reading-platform\\frontend\\src\\views\\auth\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <el-card class=\"login-card\">\r\n        <h2>墨韵读书会登录</h2>\r\n        <el-form \r\n          :model=\"form\" \r\n          :rules=\"rules\" \r\n          ref=\"loginForm\"\r\n          @submit.native.prevent=\"handleLogin\"\r\n        >\r\n          <el-form-item prop=\"username\">\r\n            <el-input\r\n              v-model=\"form.username\"\r\n              placeholder=\"请输入用户名\"\r\n              prefix-icon=\"el-icon-user\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\">\r\n            <el-input\r\n              v-model=\"form.password\"\r\n              type=\"password\"\r\n              placeholder=\"请输入密码\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              show-password\r\n            />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button \r\n              type=\"primary\" \r\n              native-type=\"submit\"\r\n              :loading=\"loading\"\r\n              class=\"login-btn\"\r\n            >\r\n              登录\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div class=\"footer\">\r\n          <router-link to=\"/register\">注册账号</router-link>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapActions } from 'vuex'\r\n  \r\n  export default {\r\n    name: 'LoginView',\r\n    data() {\r\n      return {\r\n        form: {\r\n          username: '',\r\n          password: ''\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ]\r\n        },\r\n        loading: false\r\n      }\r\n    },\r\n    methods: {\r\n      ...mapActions('auth', ['login']),\r\n      async handleLogin() {\r\n        try {\r\n          this.loading = true\r\n          await this.$refs.loginForm.validate()\r\n          await this.login(this.form)\r\n          const redirect = this.$route.query.redirect || '/'\r\n          this.$router.push(redirect)\r\n        } catch (error) {\r\n          this.$message.error(error.message)\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background: #f5f7fa;\r\n  }\r\n  \r\n  .login-card {\r\n    width: 400px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n    color: #333;\r\n  }\r\n  \r\n  .login-btn {\r\n    width: 100%;\r\n  }\r\n  \r\n  .footer {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    font-size: 14px;\r\n  }\r\n  </style>"],"mappings":";AA6CE,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLF,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,EACtD;QACDJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO;MAExD,CAAC;MACDC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;IAChC,MAAMY,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAACF,OAAM,GAAI,IAAG;QAClB,MAAM,IAAI,CAACG,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC;QACpC,MAAM,IAAI,CAACC,KAAK,CAAC,IAAI,CAACb,IAAI;QAC1B,MAAMc,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAO,IAAK,GAAE;QACjD,IAAI,CAACG,OAAO,CAACC,IAAI,CAACJ,QAAQ;MAC5B,EAAE,OAAOK,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAACA,KAAK,CAACd,OAAO;MACnC,UAAU;QACR,IAAI,CAACE,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}