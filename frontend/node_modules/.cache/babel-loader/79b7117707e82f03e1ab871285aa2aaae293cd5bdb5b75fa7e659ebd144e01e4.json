{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-detail-container\"\n};\nconst _hoisted_2 = {\n  class: \"comment-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_post_card = _resolveComponent(\"post-card\");\n  const _component_comment_form = _resolveComponent(\"comment-form\");\n  const _component_comment_list = _resolveComponent(\"comment-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    icon: \"el-icon-arrow-left\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1)),\n    class: \"back-btn\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 返回 \")])),\n    _: 1 /* STABLE */,\n    __: [1]\n  }), _createVNode(_component_post_card, {\n    post: _ctx.post,\n    class: \"post-card\"\n  }, null, 8 /* PROPS */, [\"post\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"评论 (\" + _toDisplayString(_ctx.comments.length) + \")\", 1 /* TEXT */), _createVNode(_component_comment_form, {\n    \"post-id\": $data.postId,\n    onCreated: $options.handleCommentCreated\n  }, null, 8 /* PROPS */, [\"post-id\", \"onCreated\"]), _createVNode(_component_comment_list, {\n    comments: _ctx.comments\n  }, null, 8 /* PROPS */, [\"comments\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","icon","onClick","_cache","$event","_ctx","$router","go","default","_withCtx","_createTextVNode","_","__","_component_post_card","post","_createElementVNode","_hoisted_2","_toDisplayString","comments","length","_component_comment_form","$data","postId","onCreated","$options","handleCommentCreated","_component_comment_list"],"sources":["C:\\Users\\仲佳泽\\Desktop\\大学作业\\软件工程\\moyun-reading-platform\\frontend\\src\\views\\posts\\PostDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-detail-container\">\r\n      <el-button \r\n        icon=\"el-icon-arrow-left\" \r\n        @click=\"$router.go(-1)\"\r\n        class=\"back-btn\"\r\n      >\r\n        返回\r\n      </el-button>\r\n      \r\n      <post-card :post=\"post\" class=\"post-card\" />\r\n      \r\n      <div class=\"comment-section\">\r\n        <h3>评论 ({{ comments.length }})</h3>\r\n        <comment-form \r\n          :post-id=\"postId\"\r\n          @created=\"handleCommentCreated\"\r\n        />\r\n        <comment-list :comments=\"comments\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapActions } from 'vuex'\r\n  import PostCard from '@/components/PostCard.vue'\r\n  import CommentForm from '@/components/CommentForm.vue'\r\n  import CommentList from '@/components/CommentList.vue'\r\n  \r\n  export default {\r\n    name: 'PostDetailView',\r\n    components: {\r\n      PostCard,\r\n      CommentForm,\r\n      CommentList\r\n    },\r\n    data() {\r\n      return {\r\n        postId: this.$route.params.id\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState('posts', ['post']),\r\n      ...mapState('comments', ['comments'])\r\n    },\r\n    async created() {\r\n      await Promise.all([\r\n        this.fetchPostDetail(this.postId),\r\n        this.fetchComments(this.postId)\r\n      ])\r\n    },\r\n    methods: {\r\n      ...mapActions('posts', ['fetchPostDetail']),\r\n      ...mapActions('comments', ['fetchComments', 'addComment']),\r\n      handleCommentCreated(newComment) {\r\n        this.addComment(newComment)\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .post-detail-container {\r\n    padding: 20px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .back-btn {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .post-card {\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  .comment-section {\r\n    margin-top: 40px;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAuB;;EAW3BA,KAAK,EAAC;AAAiB;;;;;;uBAX9BC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAMYC,oBAAA;IALVC,IAAI,EAAC,oBAAoB;IACxBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,EAAE;IAClBX,KAAK,EAAC;;IALdY,OAAA,EAAAC,QAAA,CAMO,MAEDN,MAAA,QAAAA,MAAA,OARNO,gBAAA,CAMO,MAED,E;IARNC,CAAA;IAAAC,EAAA;MAUMb,YAAA,CAA4Cc,oBAAA;IAAhCC,IAAI,EAAET,IAAA,CAAAS,IAAI;IAAElB,KAAK,EAAC;qCAE9BmB,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAAmC,YAA/B,MAAI,GAAAE,gBAAA,CAAGZ,IAAA,CAAAa,QAAQ,CAACC,MAAM,IAAG,GAAC,iBAC9BpB,YAAA,CAGEqB,uBAAA;IAFC,SAAO,EAAEC,KAAA,CAAAC,MAAM;IACfC,SAAO,EAAEC,QAAA,CAAAC;qDAEZ1B,YAAA,CAAqC2B,uBAAA;IAAtBR,QAAQ,EAAEb,IAAA,CAAAa;EAAQ,sC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}