{"ast":null,"code":"import { Delete } from '@element-plus/icons-vue';\nexport default {\n  name: 'TodoList',\n  components: {\n    Delete\n  },\n  props: {\n    todos: {\n      type: Array,\n      default: () => []\n    },\n    completedTodoIds: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      isAdding: false,\n      newTodo: '',\n      completedTodos: []\n    };\n  },\n  watch: {\n    completedTodoIds: {\n      immediate: true,\n      handler(val) {\n        this.completedTodos = val;\n      }\n    }\n  },\n  methods: {\n    handleAdd() {\n      this.isAdding = true;\n    },\n    handleSubmit() {\n      if (this.newTodo.trim()) {\n        this.$emit('add', this.newTodo.trim());\n        this.newTodo = '';\n        this.isAdding = false;\n      }\n    },\n    handleCancel() {\n      this.isAdding = false;\n      this.newTodo = '';\n    },\n    handleDelete(todo) {\n      this.$confirm('确定要删除这个待办事项吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$emit('delete', todo);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Delete","name","components","props","todos","type","Array","default","completedTodoIds","data","isAdding","newTodo","completedTodos","watch","immediate","handler","val","methods","handleAdd","handleSubmit","trim","$emit","handleCancel","handleDelete","todo","$confirm","confirmButtonText","cancelButtonText","then"],"sources":["E:\\moyun-reading-platform\\frontend\\src\\components\\home\\TodoList.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"todo-list\">\r\n    <template #header>\r\n      <div class=\"card-header\">\r\n        <span>待办事项</span>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"handleAdd\">添加</el-button>\r\n      </div>\r\n    </template>\r\n    <el-input\r\n      v-if=\"isAdding\"\r\n      v-model=\"newTodo\"\r\n      placeholder=\"请输入待办事项\"\r\n      @keyup.enter=\"handleSubmit\"\r\n      @blur=\"handleCancel\"\r\n    />\r\n    <el-empty v-if=\"!todos.length\" description=\"暂无待办事项\" />\r\n    <el-checkbox-group v-else v-model=\"completedTodos\" class=\"todo-items\">\r\n      <div v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\r\n        <el-checkbox :label=\"todo.id\">\r\n          <span :class=\"{ completed: completedTodos.includes(todo.id) }\">\r\n            {{ todo.content }}\r\n          </span>\r\n        </el-checkbox>\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          circle\r\n          @click=\"handleDelete(todo)\"\r\n        >\r\n          <el-icon><Delete /></el-icon>\r\n        </el-button>\r\n      </div>\r\n    </el-checkbox-group>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { Delete } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'TodoList',\r\n  components: {\r\n    Delete\r\n  },\r\n  props: {\r\n    todos: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    completedTodoIds: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isAdding: false,\r\n      newTodo: '',\r\n      completedTodos: []\r\n    }\r\n  },\r\n  watch: {\r\n    completedTodoIds: {\r\n      immediate: true,\r\n      handler(val) {\r\n        this.completedTodos = val\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleAdd() {\r\n      this.isAdding = true\r\n    },\r\n    handleSubmit() {\r\n      if (this.newTodo.trim()) {\r\n        this.$emit('add', this.newTodo.trim())\r\n        this.newTodo = ''\r\n        this.isAdding = false\r\n      }\r\n    },\r\n    handleCancel() {\r\n      this.isAdding = false\r\n      this.newTodo = ''\r\n    },\r\n    handleDelete(todo) {\r\n      this.$confirm('确定要删除这个待办事项吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$emit('delete', todo)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.todo-list {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.todo-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n  color: var(--text-color-secondary);\r\n}\r\n</style> "],"mappings":"AAqCA,SAASA,MAAK,QAAS,yBAAwB;AAE/C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,gBAAgB,EAAE;MAChBH,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,KAAK,EAAE;IACLL,gBAAgB,EAAE;MAChBM,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,GAAG,EAAE;QACX,IAAI,CAACJ,cAAa,GAAII,GAAE;MAC1B;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACR,QAAO,GAAI,IAAG;IACrB,CAAC;IACDS,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACC,KAAK,CAAC,KAAK,EAAE,IAAI,CAACV,OAAO,CAACS,IAAI,CAAC,CAAC;QACrC,IAAI,CAACT,OAAM,GAAI,EAAC;QAChB,IAAI,CAACD,QAAO,GAAI,KAAI;MACtB;IACF,CAAC;IACDY,YAAYA,CAAA,EAAG;MACb,IAAI,CAACZ,QAAO,GAAI,KAAI;MACpB,IAAI,CAACC,OAAM,GAAI,EAAC;IAClB,CAAC;IACDY,YAAYA,CAACC,IAAI,EAAE;MACjB,IAAI,CAACC,QAAQ,CAAC,eAAe,EAAE,IAAI,EAAE;QACnCC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBtB,IAAI,EAAE;MACR,CAAC,CAAC,CAACuB,IAAI,CAAC,MAAM;QACZ,IAAI,CAACP,KAAK,CAAC,QAAQ,EAAEG,IAAI;MAC3B,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}