{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mentor-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"student-list\"\n};\nconst _hoisted_3 = {\n  class: \"activity-list\"\n};\nconst _hoisted_4 = {\n  class: \"todo-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"导师工作台\", -1 /* HOISTED */)), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"我的学生\")], -1 /* HOISTED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [!$data.students.length ? (_openBlock(), _createBlock(_component_el_empty, {\n          key: 0,\n          description: \"暂无学生\"\n        })) : (_openBlock(), _createBlock(_component_el_table, {\n          key: 1,\n          data: $data.students,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"username\",\n            label: \"用户名\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"email\",\n            label: \"邮箱\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"]))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"最近活动\")], -1 /* HOISTED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_timeline, null, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activities, activity => {\n            return _openBlock(), _createBlock(_component_el_timeline_item, {\n              key: activity.id,\n              timestamp: activity.time,\n              type: activity.type\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(activity.content), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, null, {\n        header: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"待办事项\")], -1 /* HOISTED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [!$data.todos.length ? (_openBlock(), _createBlock(_component_el_empty, {\n          key: 0,\n          description: \"暂无待办\"\n        })) : (_openBlock(), _createBlock(_component_el_checkbox_group, {\n          key: 1,\n          modelValue: $data.checkedTodos,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.checkedTodos = $event)\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, todo => {\n            return _openBlock(), _createBlock(_component_el_checkbox, {\n              key: todo.id,\n              label: todo.id\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(todo.content), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_row","gutter","default","_withCtx","_component_el_col","span","_component_el_card","header","_cache","_hoisted_2","$data","students","length","_createBlock","_component_el_empty","key","description","_component_el_table","data","style","_component_el_table_column","prop","label","_","_hoisted_3","_component_el_timeline","_Fragment","_renderList","activities","activity","_component_el_timeline_item","id","timestamp","time","type","_createTextVNode","_toDisplayString","content","_hoisted_4","todos","_component_el_checkbox_group","modelValue","checkedTodos","$event","todo","_component_el_checkbox"],"sources":["C:\\Users\\仲佳泽\\Desktop\\大学作业\\软件工程\\moyun-reading-platform\\frontend\\src\\views\\mentor\\MentorDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"mentor-dashboard\">\r\n    <h1>导师工作台</h1>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>我的学生</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"student-list\">\r\n            <el-empty v-if=\"!students.length\" description=\"暂无学生\" />\r\n            <el-table v-else :data=\"students\" style=\"width: 100%\">\r\n              <el-table-column prop=\"username\" label=\"用户名\" />\r\n              <el-table-column prop=\"email\" label=\"邮箱\" />\r\n            </el-table>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>最近活动</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"activity-list\">\r\n            <el-timeline>\r\n              <el-timeline-item\r\n                v-for=\"activity in activities\"\r\n                :key=\"activity.id\"\r\n                :timestamp=\"activity.time\"\r\n                :type=\"activity.type\"\r\n              >\r\n                {{ activity.content }}\r\n              </el-timeline-item>\r\n            </el-timeline>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>待办事项</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"todo-list\">\r\n            <el-empty v-if=\"!todos.length\" description=\"暂无待办\" />\r\n            <el-checkbox-group v-else v-model=\"checkedTodos\">\r\n              <el-checkbox\r\n                v-for=\"todo in todos\"\r\n                :key=\"todo.id\"\r\n                :label=\"todo.id\"\r\n              >\r\n                {{ todo.content }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MentorDashboard',\r\n  data() {\r\n    return {\r\n      students: [],\r\n      activities: [],\r\n      todos: [],\r\n      checkedTodos: []\r\n    }\r\n  },\r\n  async created() {\r\n    // TODO: 从API获取数据\r\n    this.students = [\r\n      { username: 'student1', email: 'student1@example.com' },\r\n      { username: 'student2', email: 'student2@example.com' }\r\n    ]\r\n    this.activities = [\r\n      { id: 1, content: '学生提交了读书报告', time: '2024-05-20 10:00', type: 'primary' },\r\n      { id: 2, content: '新的读书会活动创建', time: '2024-05-19 15:30', type: 'success' }\r\n    ]\r\n    this.todos = [\r\n      { id: 1, content: '批改学生作业' },\r\n      { id: 2, content: '准备下周读书会' }\r\n    ]\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.mentor-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.student-list,\r\n.activity-list,\r\n.todo-list {\r\n  min-height: 200px;\r\n}\r\n\r\n.el-timeline {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}