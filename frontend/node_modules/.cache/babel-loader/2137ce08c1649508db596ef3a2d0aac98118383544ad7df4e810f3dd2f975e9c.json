{"ast":null,"code":"import AuthAPI from '@/api/auth';\nimport { setAuthData, clearAuthData } from '@/api/utils';\nconst state = {\n  user: null,\n  token: localStorage.getItem('token') || null,\n  status: {\n    loggedIn: !!localStorage.getItem('token')\n  }\n};\nconst getters = {\n  isAuthenticated: state => state.status.loggedIn,\n  currentUser: state => state.user,\n  userRole: state => state.user?.role\n};\nconst actions = {\n  async login({\n    commit\n  }, {\n    username,\n    password\n  }) {\n    try {\n      const user = await AuthAPI.login(username, password);\n      commit('loginSuccess', user);\n      return Promise.resolve(user);\n    } catch (error) {\n      commit('loginFailure');\n      return Promise.reject(error);\n    }\n  },\n  async logout({\n    commit\n  }) {\n    try {\n      await AuthAPI.logout();\n    } finally {\n      commit('logout');\n      clearAuthData();\n    }\n  },\n  async register({\n    commit\n  }, userData) {\n    try {\n      const response = await AuthAPI.register(userData);\n      commit('registerSuccess');\n      return Promise.resolve(response);\n    } catch (error) {\n      commit('registerFailure');\n      return Promise.reject(error);\n    }\n  },\n  async checkAuth({\n    commit\n  }) {\n    try {\n      const user = await AuthAPI.getCurrentUser();\n      commit('loginSuccess', user);\n      return Promise.resolve(user);\n    } catch (error) {\n      commit('loginFailure');\n      clearAuthData();\n      return Promise.reject(error);\n    }\n  }\n};\nconst mutations = {\n  loginSuccess(state, user) {\n    state.status.loggedIn = true;\n    state.user = user;\n  },\n  loginFailure(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n    state.token = null;\n  },\n  logout(state) {\n    state.status.loggedIn = false;\n    state.user = null;\n    state.token = null;\n  },\n  registerSuccess(state) {\n    state.status.loggedIn = false;\n  },\n  registerFailure(state) {\n    state.status.loggedIn = false;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["AuthAPI","setAuthData","clearAuthData","state","user","token","localStorage","getItem","status","loggedIn","getters","isAuthenticated","currentUser","userRole","role","actions","login","commit","username","password","Promise","resolve","error","reject","logout","register","userData","response","checkAuth","getCurrentUser","mutations","loginSuccess","loginFailure","registerSuccess","registerFailure","namespaced"],"sources":["E:/moyun-reading-platform/moyun-reading-platform/frontend/src/store/modules/auth.js"],"sourcesContent":["import AuthAPI from '@/api/auth';\r\nimport { setAuthData, clearAuthData } from '@/api/utils';\r\n\r\nconst state = {\r\n  user: null,\r\n  token: localStorage.getItem('token') || null,\r\n  status: {\r\n    loggedIn: !!localStorage.getItem('token')\r\n  }\r\n};\r\n\r\nconst getters = {\r\n  isAuthenticated: state => state.status.loggedIn,\r\n  currentUser: state => state.user,\r\n  userRole: state => state.user?.role\r\n};\r\n\r\nconst actions = {\r\n  async login({ commit }, { username, password }) {\r\n    try {\r\n      const user = await AuthAPI.login(username, password);\r\n      commit('loginSuccess', user);\r\n      return Promise.resolve(user);\r\n    } catch (error) {\r\n      commit('loginFailure');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n\r\n  async logout({ commit }) {\r\n    try {\r\n      await AuthAPI.logout();\r\n    } finally {\r\n      commit('logout');\r\n      clearAuthData();\r\n    }\r\n  },\r\n\r\n  async register({ commit }, userData) {\r\n    try {\r\n      const response = await AuthAPI.register(userData);\r\n      commit('registerSuccess');\r\n      return Promise.resolve(response);\r\n    } catch (error) {\r\n      commit('registerFailure');\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n\r\n  async checkAuth({ commit }) {\r\n    try {\r\n      const user = await AuthAPI.getCurrentUser();\r\n      commit('loginSuccess', user);\r\n      return Promise.resolve(user);\r\n    } catch (error) {\r\n      commit('loginFailure');\r\n      clearAuthData();\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  loginSuccess(state, user) {\r\n    state.status.loggedIn = true;\r\n    state.user = user;\r\n  },\r\n  loginFailure(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n    state.token = null;\r\n  },\r\n  logout(state) {\r\n    state.status.loggedIn = false;\r\n    state.user = null;\r\n    state.token = null;\r\n  },\r\n  registerSuccess(state) {\r\n    state.status.loggedIn = false;\r\n  },\r\n  registerFailure(state) {\r\n    state.status.loggedIn = false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}